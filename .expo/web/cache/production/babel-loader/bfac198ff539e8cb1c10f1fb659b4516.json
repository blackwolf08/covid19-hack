{"ast":null,"code":"import{lessThan,multiply,sub,add,divide,greaterThan}from\"../operators\";import{createAnimatedCond as cond}from\"../core/AnimatedCond\";import invariant from'fbjs/lib/invariant';import AnimatedNode from\"../core/AnimatedNode\";function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];var progress=divide(sub(value,inS),sub(inE,inS));return add(outS,multiply(progress,sub(outE,outS)));}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return cond(lessThan(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}export var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){if(arr[i]instanceof AnimatedNode||arr[i-1]instanceof AnimatedNode)continue;invariant(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){invariant(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){if(arr[i]instanceof AnimatedNode)continue;invariant(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}export default function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);invariant(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.EXTEND){}else if(left===Extrapolate.CLAMP){output=cond(lessThan(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=cond(lessThan(value,inputRange[0]),value,output);}if(right===Extrapolate.EXTEND){}else if(right===Extrapolate.CLAMP){output=cond(greaterThan(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=cond(greaterThan(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-reanimated/src/derived/interpolate.js"],"names":["lessThan","multiply","sub","add","divide","greaterThan","createAnimatedCond","cond","invariant","AnimatedNode","interpolateInternalSingle","value","inputRange","outputRange","offset","inS","inE","outS","outE","progress","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"mappings":"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","sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n} from '../operators';\n\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport invariant from 'fbjs/lib/invariant';\nimport AnimatedNode from '../core/AnimatedNode';\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  return add(outS, multiply(progress, sub(outE, outS)));\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode) continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.EXTEND) {\n  } else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.EXTEND) {\n  } else if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"]},"metadata":{},"sourceType":"module"}