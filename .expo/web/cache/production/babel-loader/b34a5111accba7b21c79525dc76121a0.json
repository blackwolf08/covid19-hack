{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import Animated from\"react-native-reanimated\";import{useMemoOne}from\"use-memo-one\";import{min}from\"./Math\";var Clock=Animated.Clock,Value=Animated.Value,set=Animated.set,add=Animated.add,multiply=Animated.multiply,cond=Animated.cond,eq=Animated.eq,abs=Animated.abs,sub=Animated.sub,interpolate=Animated.interpolate,not=Animated.not,diff=Animated.diff,lessThan=Animated.lessThan,greaterThan=Animated.greaterThan,useCode=Animated.useCode,divide=Animated.divide,modulo=Animated.modulo,proc=Animated.proc;export var moving=function moving(position){var minPositionDelta=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1e-3;var emptyFrameThreshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;var delta=diff(position);var noMovementFrames=new Value(0);return cond(lessThan(abs(delta),minPositionDelta),[set(noMovementFrames,add(noMovementFrames,1)),not(greaterThan(noMovementFrames,emptyFrameThreshold))],[set(noMovementFrames,0),1]);};export var snapPoint=function snapPoint(value,velocity,points){var point=add(value,multiply(0.2,velocity));var diffPoint=function diffPoint(p){return abs(sub(point,p));};var deltas=points.map(function(p){return diffPoint(p);});var minDelta=min.apply(void 0,_toConsumableArray(deltas));return points.reduce(function(acc,p){return cond(eq(diffPoint(p),minDelta),p,acc);},new Value());};export var bInterpolate=function bInterpolate(value,origin,destination){return interpolate(value,{inputRange:[0,1],outputRange:[origin,destination]});};export var useValues=function useValues(values,deps){return useMemoOne(function(){return values.map(function(v){return new Value(v);});},deps);};export var useNamedValues=function useNamedValues(values,deps){return useMemoOne(function(){var result={};Object.keys(values).forEach(function(key){result[key]=new Value(values[key]);});return result;},deps);};export var useClocks=function useClocks(numberOfClocks,deps){return useMemoOne(function(){return new Array(numberOfClocks).fill(0).map(function(){return new Clock();});},[deps]);};export var useDiff=function useDiff(node,deps){var _useValues=useValues([0],deps),_useValues2=_slicedToArray(_useValues,1),dDiff=_useValues2[0];useCode(function(){return set(dDiff,diff(node));},[dDiff,node]);return dDiff;};export var addTo=proc(function(value,node){return set(value,add(value,node));});export var subTo=proc(function(value,node){return set(value,sub(value,node));});export var multiplyTo=proc(function(value,node){return set(value,multiply(value,node));});export var divideTo=proc(function(value,node){return set(value,divide(value,node));});export var moduloTo=proc(function(value,node){return set(value,modulo(value,node));});","map":{"version":3,"sources":["Animations.ts"],"names":["Clock","Value","set","add","multiply","cond","eq","abs","sub","interpolate","not","diff","lessThan","greaterThan","useCode","divide","modulo","proc","Animated","moving","minPositionDelta","emptyFrameThreshold","delta","noMovementFrames","snapPoint","point","diffPoint","deltas","points","minDelta","min","bInterpolate","inputRange","outputRange","useValues","useMemoOne","values","useNamedValues","result","Object","useClocks","useDiff","dDiff","addTo","subTo","multiplyTo","divideTo","moduloTo"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { useMemoOne } from \"use-memo-one\";\n\nimport { min } from \"./Math\";\n\nconst {\n  Clock,\n  Value,\n  set,\n  add,\n  multiply,\n  cond,\n  eq,\n  abs,\n  sub,\n  interpolate,\n  not,\n  diff,\n  lessThan,\n  greaterThan,\n  useCode,\n  divide,\n  modulo,\n  proc\n} = Animated;\n\nexport type SpringConfig = Partial<Omit<Animated.SpringConfig, \"toValue\">>;\nexport type TimingConfig = Partial<Omit<Animated.TimingConfig, \"toValue\">>;\n\nexport const moving = (\n  position: Animated.Node<number>,\n  minPositionDelta = 1e-3,\n  emptyFrameThreshold = 5\n) => {\n  const delta = diff(position);\n  const noMovementFrames = new Value(0);\n  return cond(\n    lessThan(abs(delta), minPositionDelta),\n    [\n      set(noMovementFrames, add(noMovementFrames, 1)),\n      not(greaterThan(noMovementFrames, emptyFrameThreshold))\n    ],\n    [set(noMovementFrames, 0), 1]\n  );\n};\n\nexport const snapPoint = (\n  value: Animated.Adaptable<number>,\n  velocity: Animated.Adaptable<number>,\n  points: Animated.Adaptable<number>[]\n) => {\n  const point = add(value, multiply(0.2, velocity));\n  const diffPoint = (p: Animated.Adaptable<number>) => abs(sub(point, p));\n  const deltas = points.map(p => diffPoint(p));\n  const minDelta = min(...deltas);\n  return points.reduce(\n    (acc, p) => cond(eq(diffPoint(p), minDelta), p, acc),\n    new Value()\n  );\n};\n\nexport const bInterpolate = (\n  value: Animated.Adaptable<number>,\n  origin: Animated.Adaptable<number>,\n  destination: Animated.Adaptable<number>\n) =>\n  interpolate(value, {\n    inputRange: [0, 1],\n    outputRange: [origin, destination]\n  });\n\ntype Dependencies = readonly unknown[];\ntype Atomic = string | number | boolean;\n\nexport const useValues = <V extends Atomic>(\n  values: V[],\n  deps: Dependencies\n): Animated.Value<V>[] =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => values.map(v => new Value(v)), deps);\n\nexport const useNamedValues = <V extends Atomic, K extends string>(\n  values: Record<K, V>,\n  deps: Dependencies\n): Record<K, Animated.Value<V>> =>\n  useMemoOne(() => {\n    const result: Record<string, Animated.Value<V>> = {};\n    Object.keys(values).forEach(key => {\n      result[key as K] = new Value(values[key as K]);\n    });\n    return result;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport const useClocks = (\n  numberOfClocks: number,\n  deps: Dependencies\n): Animated.Clock[] =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => new Array(numberOfClocks).fill(0).map(() => new Clock()), [\n    deps\n  ]);\n\nexport const useDiff = (node: Animated.Node<number>, deps: Dependencies) => {\n  const [dDiff] = useValues<number>([0], deps);\n  useCode(() => set(dDiff, diff(node)), [dDiff, node]);\n  return dDiff;\n};\n\nexport const addTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, add(value, node))\n);\n\nexport const subTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, sub(value, node))\n);\n\nexport const multiplyTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, multiply(value, node))\n);\n\nexport const divideTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, divide(value, node))\n);\n\nexport const moduloTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, modulo(value, node))\n);\n"]},"metadata":{},"sourceType":"module"}