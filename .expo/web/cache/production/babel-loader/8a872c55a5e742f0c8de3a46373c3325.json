{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from'react';import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import axios from'axios';var apiCallGet=function apiCallGet(uri,token){return new Promise(function _callee(resolve,reject){var res;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(axios.get(uri,{headers:{Authorization:\"Token \"+token}}));case 3:res=_context.sent;resolve(res.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);reject(_context.t0);case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);});};var apiCallPost=function apiCallPost(uri,body){return new Promise(function _callee2(resolve,reject){var res;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(axios({method:'post',url:uri,data:body,headers:{'Content-Type':'multipart/form-data'}}));case 3:res=_context2.sent;resolve(res.data);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);reject(_context2.t0);case 10:case\"end\":return _context2.stop();}}},null,null,[[0,7]],Promise);});};export{apiCallGet,apiCallPost};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/api/index.js"],"names":["React","axios","apiCallGet","uri","token","Promise","resolve","reject","get","headers","Authorization","res","data","apiCallPost","body","method","url"],"mappings":"4DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,qEAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAMC,KAAN,QACjB,IAAIC,CAAAA,OAAJ,CAAY,iBAAOC,OAAP,CAAgBC,MAAhB,4LAEQN,KAAK,CAACO,GAAN,CAAUL,GAAV,CAAe,CAC7BM,OAAO,CAAE,CAAEC,aAAa,UAAWN,KAA1B,CADoB,CAAf,CAFR,SAEJO,GAFI,eAKRL,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP,CALQ,+EAORL,MAAM,aAAN,CAPQ,yEAAZ,CADiB,EAAnB,CAYA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACV,GAAD,CAAMW,IAAN,QAClB,IAAIT,CAAAA,OAAJ,CAAY,kBAAOC,OAAP,CAAgBC,MAAhB,kMAEQN,KAAK,CAAC,CACpBc,MAAM,CAAE,MADY,CAEpBC,GAAG,CAAEb,GAFe,CAGpBS,IAAI,CAAEE,IAHc,CAIpBL,OAAO,CAAE,CAAE,eAAgB,qBAAlB,CAJW,CAAD,CAFb,SAEJE,GAFI,gBAQRL,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP,CARQ,mFAURL,MAAM,cAAN,CAVQ,0EAAZ,CADkB,EAApB,CAeA,OAASL,UAAT,CAAqBW,WAArB","sourcesContent":["import React from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst apiCallGet = (uri, token) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      let res = await axios.get(uri, {\r\n        headers: { Authorization: `Token ${token}` }\r\n      });\r\n      resolve(res.data);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nconst apiCallPost = (uri, body) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      let res = await axios({\r\n        method: 'post',\r\n        url: uri,\r\n        data: body,\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      resolve(res.data);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nexport { apiCallGet, apiCallPost };\r\n"]},"metadata":{},"sourceType":"module"}