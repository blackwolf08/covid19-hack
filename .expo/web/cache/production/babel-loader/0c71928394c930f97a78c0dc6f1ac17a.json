{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from\"react\";import PropTypes from\"prop-types\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import TextInput from\"react-native-web/dist/exports/TextInput\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import CreditCard from\"./CardView/CardView\";import CCInput from\"./CCInput\";import{InjectedProps}from\"./connectToState\";var s=StyleSheet.create({container:{alignItems:\"center\"},form:{marginHorizontal:20,marginVertical:20},inputContainer:{marginLeft:20,marginTop:20,marginBottom:20},inputLabel:{fontWeight:\"bold\"},input:{height:40}});var CVC_INPUT_WIDTH=70;var EXPIRY_INPUT_WIDTH=CVC_INPUT_WIDTH;var CARD_NUMBER_INPUT_WIDTH_OFFSET=40;var CARD_NUMBER_INPUT_WIDTH=Dimensions.get(\"window\").width*0.5;var NAME_INPUT_WIDTH=CARD_NUMBER_INPUT_WIDTH;var PREVIOUS_FIELD_OFFSET=40;var POSTAL_CODE_INPUT_WIDTH=120;var CreditCardInput=function(_Component){_inherits(CreditCardInput,_Component);var _super=_createSuper(CreditCardInput);function CreditCardInput(){var _this;_classCallCheck(this,CreditCardInput);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.componentDidMount=function(){return _this._focus(_this.props.focused);};_this._focus=function(field){if(!field)return;var scrollResponder=_this.refs.Form.getScrollResponder();var nodeHandle=findNodeHandle(_this.refs[field]);NativeModules.UIManager.measureLayoutRelativeToParent(nodeHandle,function(e){throw e;},function(x){scrollResponder.scrollTo({x:Math.max(x-PREVIOUS_FIELD_OFFSET,0),animated:true});_this.refs[field].focus();});};_this._inputProps=function(field){var _this$props=_this.props,inputStyle=_this$props.inputStyle,labelStyle=_this$props.labelStyle,validColor=_this$props.validColor,invalidColor=_this$props.invalidColor,placeholderColor=_this$props.placeholderColor,placeholders=_this$props.placeholders,labels=_this$props.labels,values=_this$props.values,status=_this$props.status,onFocus=_this$props.onFocus,onChange=_this$props.onChange,onBecomeEmpty=_this$props.onBecomeEmpty,onBecomeValid=_this$props.onBecomeValid,additionalInputsProps=_this$props.additionalInputsProps;return{inputStyle:[s.input,inputStyle],labelStyle:[s.inputLabel,labelStyle],validColor:validColor,invalidColor:invalidColor,placeholderColor:placeholderColor,ref:field,field:field,label:labels[field],placeholder:placeholders[field],value:values[field],status:status[field],onFocus:onFocus,onChange:onChange,onBecomeEmpty:onBecomeEmpty,onBecomeValid:onBecomeValid,additionalInputProps:additionalInputsProps[field]};};return _this;}_createClass(CreditCardInput,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.focused!==this.props.focused)this._focus(this.props.focused);}},{key:\"render\",value:function render(){var _this$props2=this.props,cardImageFront=_this$props2.cardImageFront,cardImageBack=_this$props2.cardImageBack,inputContainerStyle=_this$props2.inputContainerStyle,_this$props2$values=_this$props2.values,number=_this$props2$values.number,expiry=_this$props2$values.expiry,cvc=_this$props2$values.cvc,name=_this$props2$values.name,type=_this$props2$values.type,focused=_this$props2.focused,placeholderCardView=_this$props2.placeholderCardView,allowScroll=_this$props2.allowScroll,requiresName=_this$props2.requiresName,requiresCVC=_this$props2.requiresCVC,requiresPostalCode=_this$props2.requiresPostalCode,cardScale=_this$props2.cardScale,cardFontFamily=_this$props2.cardFontFamily,cardBrandIcons=_this$props2.cardBrandIcons,scrollViewProps=_this$props2.scrollViewProps;return React.createElement(View,{style:s.container},React.createElement(CreditCard,{focused:focused,brand:type,scale:cardScale,fontFamily:cardFontFamily,imageFront:cardImageFront,imageBack:cardImageBack,customIcons:cardBrandIcons,placeholder:placeholderCardView,name:requiresName?name:\" \",number:number,expiry:expiry,cvc:cvc}),React.createElement(ScrollView,_extends({ref:\"Form\",horizontal:true,keyboardShouldPersistTaps:\"always\",scrollEnabled:allowScroll,showsHorizontalScrollIndicator:false,style:s.form},scrollViewProps),requiresName&&React.createElement(CCInput,_extends({},this._inputProps(\"name\"),{containerStyle:[s.inputContainer,inputContainerStyle,{width:NAME_INPUT_WIDTH}]})),React.createElement(CCInput,_extends({},this._inputProps(\"number\"),{keyboardType:\"numeric\",containerStyle:[s.inputContainer,inputContainerStyle,{width:CARD_NUMBER_INPUT_WIDTH}]})),React.createElement(CCInput,_extends({},this._inputProps(\"expiry\"),{keyboardType:\"numeric\",containerStyle:[s.inputContainer,inputContainerStyle]})),requiresCVC&&React.createElement(CCInput,_extends({},this._inputProps(\"cvc\"),{keyboardType:\"numeric\",containerStyle:[s.inputContainer,inputContainerStyle,{width:CVC_INPUT_WIDTH}]})),requiresPostalCode&&React.createElement(CCInput,_extends({},this._inputProps(\"postalCode\"),{containerStyle:[s.inputContainer,inputContainerStyle,{width:POSTAL_CODE_INPUT_WIDTH}]}))));}}]);return CreditCardInput;}(Component);CreditCardInput.propTypes=_objectSpread({},InjectedProps,{labels:PropTypes.object,placeholders:PropTypes.object,labelStyle:Text.propTypes.style,inputStyle:TextInput.propTypes.style,inputContainerStyle:ViewPropTypes.style,validColor:PropTypes.string,invalidColor:PropTypes.string,placeholderColor:PropTypes.string,cardImageFront:PropTypes.number,cardImageBack:PropTypes.number,cardScale:PropTypes.number,cardFontFamily:PropTypes.string,cardBrandIcons:PropTypes.object,allowScroll:PropTypes.bool,additionalInputsProps:PropTypes.objectOf(PropTypes.shape(TextInput.propTypes)),scrollViewProps:PropTypes.object});CreditCardInput.defaultProps={cardViewSize:{},labels:{name:\"NAME\",number:\"CARD NUMBER\",expiry:\"EXPIRY\",cvc:\"CVC/CCV\",postalCode:\"POSTAL CODE\"},placeholders:{name:\"Full name\",number:\"1234 5678 1234 5678\",expiry:\"MM/YY\",cvc:\"CVC\",postalCode:\"34567\"},inputContainerStyle:{borderBottomWidth:1,borderBottomColor:\"black\"},validColor:\"\",invalidColor:\"red\",placeholderColor:\"gray\",allowScroll:false,additionalInputsProps:{}};export{CreditCardInput as default};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/src/CreditCardInput.js"],"names":["React","Component","PropTypes","CreditCard","CCInput","InjectedProps","s","StyleSheet","create","container","alignItems","form","marginHorizontal","marginVertical","inputContainer","marginLeft","marginTop","marginBottom","inputLabel","fontWeight","input","height","CVC_INPUT_WIDTH","EXPIRY_INPUT_WIDTH","CARD_NUMBER_INPUT_WIDTH_OFFSET","CARD_NUMBER_INPUT_WIDTH","Dimensions","get","width","NAME_INPUT_WIDTH","PREVIOUS_FIELD_OFFSET","POSTAL_CODE_INPUT_WIDTH","CreditCardInput","componentDidMount","_focus","props","focused","field","scrollResponder","refs","Form","getScrollResponder","nodeHandle","findNodeHandle","NativeModules","UIManager","measureLayoutRelativeToParent","e","x","scrollTo","Math","max","animated","focus","_inputProps","inputStyle","labelStyle","validColor","invalidColor","placeholderColor","placeholders","labels","values","status","onFocus","onChange","onBecomeEmpty","onBecomeValid","additionalInputsProps","ref","label","placeholder","value","additionalInputProps","prevProps","cardImageFront","cardImageBack","inputContainerStyle","number","expiry","cvc","name","type","placeholderCardView","allowScroll","requiresName","requiresCVC","requiresPostalCode","cardScale","cardFontFamily","cardBrandIcons","scrollViewProps","propTypes","object","Text","style","TextInput","ViewPropTypes","string","bool","objectOf","shape","defaultProps","cardViewSize","postalCode","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  NativeModules,\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  ViewPropTypes,\n  TextInput,\n  findNodeHandle\n} from \"react-native\";\n\nimport CreditCard from \"./CardView/CardView\";\nimport CCInput from \"./CCInput\";\nimport { InjectedProps } from \"./connectToState\";\n\nconst s = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n  },\n  form: {\n    marginHorizontal: 20,\n    marginVertical: 20,\n  },\n  inputContainer: {\n    marginLeft: 20,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  inputLabel: {\n    fontWeight: \"bold\",\n  },\n  input: {\n    height: 40,\n  },\n});\n\nconst CVC_INPUT_WIDTH = 70;\nconst EXPIRY_INPUT_WIDTH = CVC_INPUT_WIDTH;\nconst CARD_NUMBER_INPUT_WIDTH_OFFSET = 40;\nconst CARD_NUMBER_INPUT_WIDTH = Dimensions.get(\"window\").width * 0.5;\nconst NAME_INPUT_WIDTH = CARD_NUMBER_INPUT_WIDTH;\nconst PREVIOUS_FIELD_OFFSET = 40;\nconst POSTAL_CODE_INPUT_WIDTH = 120;\n\n/* eslint react/prop-types: 0 */ // https://github.com/yannickcr/eslint-plugin-react/issues/106\nexport default class CreditCardInput extends Component {\n  static propTypes = {\n    ...InjectedProps,\n    labels: PropTypes.object,\n    placeholders: PropTypes.object,\n\n    labelStyle: Text.propTypes.style,\n    // inputStyle: Text.propTypes.style,\n    inputStyle: TextInput.propTypes.style,\n    inputContainerStyle: ViewPropTypes.style,\n\n    validColor: PropTypes.string,\n    invalidColor: PropTypes.string,\n    placeholderColor: PropTypes.string,\n\n    cardImageFront: PropTypes.number,\n    cardImageBack: PropTypes.number,\n    cardScale: PropTypes.number,\n    cardFontFamily: PropTypes.string,\n    cardBrandIcons: PropTypes.object,\n\n    allowScroll: PropTypes.bool,\n\n    additionalInputsProps: PropTypes.objectOf(PropTypes.shape(TextInput.propTypes)),\n\n    scrollViewProps: PropTypes.object,\n  };\n\n  static defaultProps = {\n    cardViewSize: {},\n    labels: {\n      name: \"NAME\",\n      number: \"CARD NUMBER\",\n      expiry: \"EXPIRY\",\n      cvc: \"CVC/CCV\",\n      postalCode: \"POSTAL CODE\",\n    },\n    placeholders: {\n      name: \"Full name\",\n      number: \"1234 5678 1234 5678\",\n      expiry: \"MM/YY\",\n      cvc: \"CVC\",\n      postalCode: \"34567\",\n    },\n    inputContainerStyle: {\n      borderBottomWidth: 1,\n      borderBottomColor: \"black\",\n    },\n    validColor: \"\",\n    invalidColor: \"red\",\n    placeholderColor: \"gray\",\n    allowScroll: false,\n    additionalInputsProps: {},\n  };\n\n  componentDidMount = () => this._focus(this.props.focused);\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.focused !== this.props.focused) this._focus(this.props.focused);\n  }\n\n  _focus = field => {\n    if (!field) return;\n\n    const scrollResponder = this.refs.Form.getScrollResponder();\n    const nodeHandle = findNodeHandle(this.refs[field]);\n\n    NativeModules.UIManager.measureLayoutRelativeToParent(nodeHandle,\n      e => { throw e; },\n      x => {\n        scrollResponder.scrollTo({ x: Math.max(x - PREVIOUS_FIELD_OFFSET, 0), animated: true });\n        this.refs[field].focus();\n      });\n  }\n\n  _inputProps = field => {\n    const {\n      inputStyle,\n      labelStyle,\n      validColor,\n      invalidColor,\n      placeholderColor,\n      placeholders,\n      labels,\n      values,\n      status,\n      onFocus,\n      onChange,\n      onBecomeEmpty,\n      onBecomeValid,\n      additionalInputsProps,\n    } = this.props;\n\n    return {\n      inputStyle: [s.input, inputStyle],\n      labelStyle: [s.inputLabel, labelStyle],\n      validColor, invalidColor, placeholderColor,\n      ref: field, field,\n\n      label: labels[field],\n      placeholder: placeholders[field],\n      value: values[field],\n      status: status[field],\n\n      onFocus, onChange, onBecomeEmpty, onBecomeValid,\n\n      additionalInputProps: additionalInputsProps[field],\n    };\n  };\n\n  render() {\n    const {\n      cardImageFront,\n      cardImageBack,\n      inputContainerStyle,\n      values: { number, expiry, cvc, name, type },\n      focused,\n      placeholderCardView,\n      allowScroll,\n      requiresName,\n      requiresCVC,\n      requiresPostalCode,\n      cardScale,\n      cardFontFamily,\n      cardBrandIcons,\n      scrollViewProps,\n    } = this.props;\n\n    return (\n      <View style={s.container}>\n        <CreditCard\n          focused={focused}\n          brand={type}\n          scale={cardScale}\n          fontFamily={cardFontFamily}\n          imageFront={cardImageFront}\n          imageBack={cardImageBack}\n          customIcons={cardBrandIcons}\n          placeholder={placeholderCardView}\n          name={requiresName ? name : \" \"}\n          number={number}\n          expiry={expiry}\n          cvc={cvc}\n        />\n        <ScrollView\n          ref=\"Form\"\n          horizontal\n          keyboardShouldPersistTaps=\"always\"\n          scrollEnabled={allowScroll}\n          showsHorizontalScrollIndicator={false}\n          style={s.form}\n          {...scrollViewProps}\n        >\n          {requiresName && (\n            <CCInput\n              {...this._inputProps(\"name\")}\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: NAME_INPUT_WIDTH }]}\n            />\n          )}\n          <CCInput\n            {...this._inputProps(\"number\")}\n            keyboardType=\"numeric\"\n            containerStyle={[s.inputContainer, inputContainerStyle, { width: CARD_NUMBER_INPUT_WIDTH }]}\n          />\n          <CCInput\n            {...this._inputProps(\"expiry\")}\n            keyboardType=\"numeric\"\n            containerStyle={[s.inputContainer, inputContainerStyle]}\n          />\n          {requiresCVC && (\n            <CCInput\n              {...this._inputProps(\"cvc\")}\n              keyboardType=\"numeric\"\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: CVC_INPUT_WIDTH }]}\n            />\n          )}\n          {requiresPostalCode && (\n            <CCInput\n              {...this._inputProps(\"postalCode\")}\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: POSTAL_CODE_INPUT_WIDTH }]}\n            />\n          )}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}