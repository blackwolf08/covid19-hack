{"ast":null,"code":"'use strict';var clone=require(\"./clone\");var matches=require(\"./matches\");function addMatchingCardsToResults(cardNumber,cardConfiguration,results){var i,pattern,patternLength,clonedCardConfiguration;for(i=0;i<cardConfiguration.patterns.length;i++){pattern=cardConfiguration.patterns[i];if(!matches(cardNumber,pattern)){continue;}clonedCardConfiguration=clone(cardConfiguration);if(Array.isArray(pattern)){patternLength=String(pattern[0]).length;}else{patternLength=String(pattern).length;}if(cardNumber.length>=patternLength){clonedCardConfiguration.matchStrength=patternLength;}results.push(clonedCardConfiguration);break;}}module.exports=addMatchingCardsToResults;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/node_modules/credit-card-type/lib/add-matching-cards-to-results.js"],"names":["clone","require","matches","addMatchingCardsToResults","cardNumber","cardConfiguration","results","i","pattern","patternLength","clonedCardConfiguration","patterns","length","Array","isArray","String","matchStrength","push","module","exports"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,WAAnB,CACA,GAAIC,CAAAA,OAAO,CAAGD,OAAO,aAArB,CAEA,QAASE,CAAAA,yBAAT,CAAmCC,UAAnC,CAA+CC,iBAA/C,CAAkEC,OAAlE,CAA2E,CACzE,GAAIC,CAAAA,CAAJ,CAAOC,OAAP,CAAgBC,aAAhB,CAA+BC,uBAA/B,CAEA,IAAKH,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGF,iBAAiB,CAACM,QAAlB,CAA2BC,MAA3C,CAAmDL,CAAC,EAApD,CAAwD,CACtDC,OAAO,CAAGH,iBAAiB,CAACM,QAAlB,CAA2BJ,CAA3B,CAAV,CAEA,GAAI,CAACL,OAAO,CAACE,UAAD,CAAaI,OAAb,CAAZ,CAAmC,CACjC,SACD,CAEDE,uBAAuB,CAAGV,KAAK,CAACK,iBAAD,CAA/B,CAEA,GAAIQ,KAAK,CAACC,OAAN,CAAcN,OAAd,CAAJ,CAA4B,CAC1BC,aAAa,CAAGM,MAAM,CAACP,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBI,MAAnC,CACD,CAFD,IAEO,CACLH,aAAa,CAAGM,MAAM,CAACP,OAAD,CAAN,CAAgBI,MAAhC,CACD,CAED,GAAIR,UAAU,CAACQ,MAAX,EAAqBH,aAAzB,CAAwC,CACtCC,uBAAuB,CAACM,aAAxB,CAAwCP,aAAxC,CACD,CAEDH,OAAO,CAACW,IAAR,CAAaP,uBAAb,EACA,MACD,CACF,CAEDQ,MAAM,CAACC,OAAP,CAAiBhB,yBAAjB","sourcesContent":["'use strict';\n\nvar clone = require('./clone');\nvar matches = require('./matches');\n\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n  var i, pattern, patternLength, clonedCardConfiguration;\n\n  for (i = 0; i < cardConfiguration.patterns.length; i++) {\n    pattern = cardConfiguration.patterns[i];\n\n    if (!matches(cardNumber, pattern)) {\n      continue;\n    }\n\n    clonedCardConfiguration = clone(cardConfiguration);\n\n    if (Array.isArray(pattern)) {\n      patternLength = String(pattern[0]).length;\n    } else {\n      patternLength = String(pattern).length;\n    }\n\n    if (cardNumber.length >= patternLength) {\n      clonedCardConfiguration.matchStrength = patternLength;\n    }\n\n    results.push(clonedCardConfiguration);\n    break;\n  }\n}\n\nmodule.exports = addMatchingCardsToResults;\n"]},"metadata":{},"sourceType":"script"}