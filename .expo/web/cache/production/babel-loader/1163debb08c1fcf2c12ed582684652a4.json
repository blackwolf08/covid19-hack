{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TabBar}from'react-native-tab-view';import Animated from'react-native-reanimated';var TabBarTop=function(_React$PureComponent){_inherits(TabBarTop,_React$PureComponent);var _super=_createSuper(TabBarTop);function TabBarTop(){var _this;_classCallCheck(this,TabBarTop);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"_renderLabel\",function(_ref){var route=_ref.route,focused=_ref.focused,color=_ref.color;var _this$props2=_this.props,showLabel=_this$props2.showLabel,upperCaseLabel=_this$props2.upperCaseLabel,labelStyle=_this$props2.labelStyle,allowFontScaling=_this$props2.allowFontScaling;if(showLabel===false){return null;}var label=_this.props.getLabelText({route:route});if(typeof label==='string'){return React.createElement(Animated.Text,{style:[styles.label,{color:color},labelStyle],allowFontScaling:allowFontScaling},upperCaseLabel?label.toUpperCase():label);}if(typeof label==='function'){return label({focused:focused,tintColor:color});}return label;});_defineProperty(_assertThisInitialized(_this),\"_renderIcon\",function(_ref2){var route=_ref2.route,focused=_ref2.focused,color=_ref2.color;var _this$props3=_this.props,renderIcon=_this$props3.renderIcon,showIcon=_this$props3.showIcon,iconStyle=_this$props3.iconStyle;if(showIcon===false){return null;}return React.createElement(View,{style:[styles.icon,iconStyle]},renderIcon({route:route,focused:focused,tintColor:color}));});return _this;}_createClass(TabBarTop,[{key:\"render\",value:function render(){var _this$props=this.props,navigation=_this$props.navigation,activeTintColor=_this$props.activeTintColor,inactiveTintColor=_this$props.inactiveTintColor,renderIcon=_this$props.renderIcon,getLabelText=_this$props.getLabelText,allowFontScaling=_this$props.allowFontScaling,showLabel=_this$props.showLabel,showIcon=_this$props.showIcon,upperCaseLabel=_this$props.upperCaseLabel,tabBarPosition=_this$props.tabBarPosition,screenProps=_this$props.screenProps,iconStyle=_this$props.iconStyle,rest=_objectWithoutProperties(_this$props,[\"navigation\",\"activeTintColor\",\"inactiveTintColor\",\"renderIcon\",\"getLabelText\",\"allowFontScaling\",\"showLabel\",\"showIcon\",\"upperCaseLabel\",\"tabBarPosition\",\"screenProps\",\"iconStyle\"]);return React.createElement(TabBar,_extends({},rest,{activeColor:activeTintColor,inactiveColor:inactiveTintColor,navigationState:navigation.state,renderIcon:this._renderIcon,renderLabel:this._renderLabel}));}}]);return TabBarTop;}(React.PureComponent);export{TabBarTop as default};_defineProperty(TabBarTop,\"defaultProps\",{activeTintColor:'rgba(255, 255, 255, 1)',inactiveTintColor:'rgba(255, 255, 255, 0.7)',showIcon:false,showLabel:true,upperCaseLabel:true,allowFontScaling:true});var styles=StyleSheet.create({icon:{height:24,width:24},label:{textAlign:'center',fontSize:13,margin:4,backgroundColor:'transparent'}});","map":{"version":3,"sources":["MaterialTopTabBar.tsx"],"names":["TabBarTop","React","activeTintColor","inactiveTintColor","showIcon","showLabel","upperCaseLabel","allowFontScaling","color","label","route","styles","focused","tintColor","iconStyle","renderIcon","navigation","_renderLabel","icon","height","width","textAlign","fontSize","margin","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\nimport { MaterialTabBarProps } from '../types';\n\ntype Scene = { route: NavigationRoute; focused: boolean; color: string };\n\nexport default class TabBarTop extends React.PureComponent<\n  MaterialTabBarProps\n> {\n  static defaultProps = {\n    activeTintColor: 'rgba(255, 255, 255, 1)',\n    inactiveTintColor: 'rgba(255, 255, 255, 0.7)',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true,\n  };\n\n  _renderLabel = ({ route, focused, color }: Scene) => {\n    const {\n      showLabel,\n      upperCaseLabel,\n      labelStyle,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const label = this.props.getLabelText({ route });\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          style={[styles.label, { color }, labelStyle]}\n          allowFontScaling={allowFontScaling}\n        >\n          {upperCaseLabel ? label.toUpperCase() : label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ focused, tintColor: color });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused, color }: Scene) => {\n    const { renderIcon, showIcon, iconStyle } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    return (\n      <View style={[styles.icon, iconStyle]}>\n        {renderIcon({\n          route,\n          focused,\n          tintColor: color,\n        })}\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      renderIcon,\n      getLabelText,\n      allowFontScaling,\n      showLabel,\n      showIcon,\n      upperCaseLabel,\n      tabBarPosition,\n      screenProps,\n      iconStyle,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    return (\n      <TabBar\n        {...rest}\n        activeColor={activeTintColor}\n        inactiveColor={inactiveTintColor}\n        navigationState={navigation.state}\n        renderIcon={this._renderIcon}\n        renderLabel={this._renderLabel}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}