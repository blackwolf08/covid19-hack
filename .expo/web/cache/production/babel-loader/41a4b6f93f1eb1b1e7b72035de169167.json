{"ast":null,"code":"import _construct from\"@babel/runtime/helpers/construct\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import AnimatedNode from\"./AnimatedNode\";import{createAnimatedCallFunc}from\"./AnimatedCallFunc\";import{createAnimatedParam}from\"./AnimatedParam\";import{val}from\"../val\";var AnimatedFunction=function(_AnimatedNode){_inherits(AnimatedFunction,_AnimatedNode);var _super=_createSuper(AnimatedFunction);function AnimatedFunction(what){var _this;_classCallCheck(this,AnimatedFunction);for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}_this=_super.call(this,{type:'func',what:what.__nodeID},[what].concat(params));_this._what=what;_this.__attach();return _this;}_createClass(AnimatedFunction,[{key:\"__onEvaluate\",value:function __onEvaluate(){return val(this._what);}}]);return AnimatedFunction;}(AnimatedNode);export function createAnimatedFunction(cb){var params=new Array(cb.length);for(var i=0;i<params.length;i++){params[i]=createAnimatedParam();}var what=cb.apply(void 0,params);var func=_construct(AnimatedFunction,[what].concat(params));return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}if(args.length!==params.length){throw new Error('Parameter mismatch when calling reanimated function. Expected '+params.length+' parameters, got '+args.length+'.');}return createAnimatedCallFunc(func,args,params);};}","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-reanimated/src/core/AnimatedFunction.js"],"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","val","AnimatedFunction","what","params","type","__nodeID","_what","__attach","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"mappings":"4+BAAA,MAAOA,CAAAA,YAAP,sBACA,OAASC,sBAAT,0BACA,OAASC,mBAAT,uBACA,OAASC,GAAT,c,GAEMC,CAAAA,gB,6GAGJ,0BAAYC,IAAZ,CAA6B,gFAARC,MAAQ,qDAARA,MAAQ,0BAC3B,uBACE,CACEC,IAAI,CAAE,MADR,CAEEF,IAAI,CAAEA,IAAI,CAACG,QAFb,CADF,EAKGH,IALH,SAKYC,MALZ,GAOA,MAAKG,KAAL,CAAaJ,IAAb,CACA,MAAKK,QAAL,GAT2B,aAU5B,C,gFAEc,CACb,MAAOP,CAAAA,GAAG,CAAC,KAAKM,KAAN,CAAV,CACD,C,8BAjB4BT,Y,EAoB/B,MAAO,SAASW,CAAAA,sBAAT,CAAgCC,EAAhC,CAAoC,CACzC,GAAMN,CAAAA,MAAM,CAAG,GAAIO,CAAAA,KAAJ,CAAUD,EAAE,CAACE,MAAb,CAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,MAAM,CAACQ,MAA3B,CAAmCC,CAAC,EAApC,CAAwC,CACtCT,MAAM,CAACS,CAAD,CAAN,CAAYb,mBAAmB,EAA/B,CACD,CACD,GAAMG,CAAAA,IAAI,CAAGO,EAAE,MAAF,QAAMN,MAAN,CAAb,CACA,GAAMU,CAAAA,IAAI,YAAOZ,gBAAP,EAAwBC,IAAxB,SAAiCC,MAAjC,EAAV,CACA,MAAO,WAAa,gCAATW,IAAS,+CAATA,IAAS,0BAClB,GAAIA,IAAI,CAACH,MAAL,GAAgBR,MAAM,CAACQ,MAA3B,CAAmC,CACjC,KAAM,IAAII,CAAAA,KAAJ,CACJ,iEACEZ,MAAM,CAACQ,MADT,CAEE,mBAFF,CAGEG,IAAI,CAACH,MAHP,CAIE,GALE,CAAN,CAOD,CACD,MAAOb,CAAAA,sBAAsB,CAACe,IAAD,CAAOC,IAAP,CAAaX,MAAb,CAA7B,CACD,CAXD,CAYD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    super(\n      {\n        type: 'func',\n        what: what.__nodeID,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}