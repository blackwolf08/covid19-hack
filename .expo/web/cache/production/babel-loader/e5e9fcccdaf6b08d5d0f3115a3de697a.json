{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from\"react\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import Animated from\"react-native-reanimated\";import{LinearGradient}from\"expo-linear-gradient\";import Constants from\"expo-constants\";import{PanGestureHandler,State}from\"react-native-gesture-handler\";import{onGestureEvent,snapPoint}from\"react-native-redash\";import Weave from\"./Weave\";import{followPointer,snapProgress}from\"./AnimationHelpers\";import{initialSideWidth,initialWaveCenter,sideWidth,waveHorRadius,waveHorRadiusBack,waveVertRadius}from\"./WeaveHelpers\";import ContentBack from\"./ContentBack\";import ContentFront from\"./ContentFront\";import Button from\"./Button\";export var assets=[require(\"./assets/bravo.gif\"),require(\"./assets/firstPageImage.png\")];var _Dimensions$get=Dimensions.get(\"window\"),width=_Dimensions$get.width;var Value=Animated.Value,cond=Animated.cond,multiply=Animated.multiply,divide=Animated.divide,interpolate=Animated.interpolate;var styles=StyleSheet.create({container:{flex:1}});var index=function index(props){var y=new Value(initialWaveCenter);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isModalActive=_React$useState2[0],setModalActive=_React$useState2[1];var translationX=new Value(0);var velocityX=new Value(0);var state=new Value(State.UNDETERMINED);var gestureHandler=onGestureEvent({translationX:translationX,velocityX:velocityX,y:y,state:state});var maxDist=width-initialSideWidth;var isBack=new Value(0);var gestureProgress=cond(isBack,interpolate(translationX,{inputRange:[0,maxDist],outputRange:[1,0]}),interpolate(translationX,{inputRange:[-maxDist,0],outputRange:[0.4,0]}));var progress=snapProgress(gestureProgress,state,isBack,snapPoint(gestureProgress,divide(multiply(-1,velocityX),cond(isBack,maxDist,multiply(maxDist,0.4))),[0,1]));var centerY=followPointer(y);var horRadius=cond(isBack,waveHorRadiusBack(progress),waveHorRadius(progress));var vertRadius=waveVertRadius(progress);var sWidth=sideWidth(progress);return React.createElement(View,{style:styles.container},React.createElement(ContentBack,{backgroundColor:\"white\",source:assets[0],title1:\"Prime\",title2:\"Members\",color:\"black\"}),React.createElement(PanGestureHandler,gestureHandler,React.createElement(Animated.View,{style:StyleSheet.absoluteFill},React.createElement(Weave,_extends({sideWidth:sWidth},{centerY:centerY,horRadius:horRadius,vertRadius:vertRadius}),React.createElement(ContentFront,{backgroundColor:\"#7E89FD\",source:assets[1],title1:\"Special Benefits\",title2:\"FOR YOU\",color:\"#fff\"})),React.createElement(Button,_extends({y:centerY},{progress:progress})))),React.createElement(LinearGradient,{colors:[\"#FFBF00\",\"#FFDC73\"]},React.createElement(TouchableOpacity,{onPress:function onPress(){props.navigation.navigate(\"Saved\");console.log(props);}},React.createElement(Text,{style:{paddingVertical:Platform.OS==\"android\"?Constants.statusBarHeight+10:40,fontSize:20,color:\"white\",textAlign:\"center\",fontWeight:\"bold\"}},\"Go PRIME\"))));};export default index;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/Screens/LiquidSwipe/index.js"],"names":["React","Animated","LinearGradient","Constants","PanGestureHandler","State","onGestureEvent","snapPoint","Weave","followPointer","snapProgress","initialSideWidth","initialWaveCenter","sideWidth","waveHorRadius","waveHorRadiusBack","waveVertRadius","ContentBack","ContentFront","Button","assets","require","Dimensions","get","width","Value","cond","multiply","divide","interpolate","styles","StyleSheet","create","container","flex","index","props","y","useState","isModalActive","setModalActive","translationX","velocityX","state","UNDETERMINED","gestureHandler","maxDist","isBack","gestureProgress","inputRange","outputRange","progress","centerY","horRadius","vertRadius","sWidth","absoluteFill","navigation","navigate","console","log","paddingVertical","Platform","OS","statusBarHeight","fontSize","color","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport Animated from \"react-native-reanimated\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Constants from \"expo-constants\";\n\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\nimport { onGestureEvent, snapPoint } from \"react-native-redash\";\nimport Weave from \"./Weave\";\nimport { followPointer, snapProgress } from \"./AnimationHelpers\";\nimport {\n  initialSideWidth,\n  initialWaveCenter,\n  sideWidth,\n  waveHorRadius,\n  waveHorRadiusBack,\n  waveVertRadius,\n} from \"./WeaveHelpers\";\nimport ContentBack from \"./ContentBack\";\nimport ContentFront from \"./ContentFront\";\nimport Button from \"./Button\";\n\nexport const assets = [\n  require(\"./assets/bravo.gif\"),\n  require(\"./assets/firstPageImage.png\"),\n];\n\nconst { width } = Dimensions.get(\"window\");\nconst { Value, cond, multiply, divide, interpolate } = Animated;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nconst index = (props) => {\n  const y = new Value(initialWaveCenter);\n  let [isModalActive, setModalActive] = React.useState(false);\n  const translationX = new Value(0);\n  const velocityX = new Value(0);\n  const state = new Value(State.UNDETERMINED);\n  const gestureHandler = onGestureEvent({\n    translationX,\n    velocityX,\n    y,\n    state,\n  });\n  const maxDist = width - initialSideWidth;\n  const isBack = new Value(0);\n  const gestureProgress = cond(\n    isBack,\n    interpolate(translationX, {\n      inputRange: [0, maxDist],\n      outputRange: [1, 0],\n    }),\n    interpolate(translationX, {\n      inputRange: [-maxDist, 0],\n      outputRange: [0.4, 0],\n    })\n  );\n  const progress = snapProgress(\n    gestureProgress,\n    state,\n    isBack,\n    snapPoint(\n      gestureProgress,\n      divide(\n        multiply(-1, velocityX),\n        cond(isBack, maxDist, multiply(maxDist, 0.4))\n      ),\n      [0, 1]\n    )\n  );\n  const centerY = followPointer(y);\n  const horRadius = cond(\n    isBack,\n    waveHorRadiusBack(progress),\n    waveHorRadius(progress)\n  );\n  const vertRadius = waveVertRadius(progress);\n  const sWidth = sideWidth(progress);\n  return (\n    <View style={styles.container}>\n      <ContentBack\n        backgroundColor=\"white\"\n        source={assets[0]}\n        title1=\"Prime\"\n        title2=\"Members\"\n        color=\"black\"\n      />\n      <PanGestureHandler {...gestureHandler}>\n        <Animated.View style={StyleSheet.absoluteFill}>\n          <Weave sideWidth={sWidth} {...{ centerY, horRadius, vertRadius }}>\n            <ContentFront\n              backgroundColor=\"#7E89FD\"\n              source={assets[1]}\n              title1=\"Special Benefits\"\n              title2=\"FOR YOU\"\n              color=\"#fff\"\n            />\n          </Weave>\n          <Button y={centerY} {...{ progress }} />\n        </Animated.View>\n      </PanGestureHandler>\n      <LinearGradient colors={[\"#FFBF00\", \"#FFDC73\"]}>\n        <TouchableOpacity\n          onPress={() => {\n            props.navigation.navigate(\"Saved\");\n            console.log(props);\n          }}\n        >\n          <Text\n            style={{\n              paddingVertical:\n                Platform.OS == \"android\" ? Constants.statusBarHeight + 10 : 40,\n              fontSize: 20,\n              color: \"white\",\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Go PRIME\n          </Text>\n        </TouchableOpacity>\n      </LinearGradient>\n\n      {/* <TouchableOpacity\n        onPress={() => {\n          props.navigation.goBack();\n        }}\n      >\n        <Text\n          style={{\n            position: 'absolute',\n            left: 30,\n            bottom: 10,\n            padding: 20,\n            borderRadius: 50,\n            backgroundColor: 'white',\n            color: 'black'\n          }}\n        >\n          Back\n        </Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}