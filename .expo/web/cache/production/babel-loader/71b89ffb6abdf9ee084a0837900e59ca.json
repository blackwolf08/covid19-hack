{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import Animated from\"react-native-reanimated\";var concat=Animated.concat;export var string=function string(strings){for(var _len=arguments.length,values=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){values[_key-1]=arguments[_key];}if(values.length===0){return concat(strings[0]);}var result=values.reduce(function(acc,v,idx){return[].concat(_toConsumableArray(acc),[strings[idx],v]);},[]);result.push(strings[strings.length-1]);return concat.apply(void 0,_toConsumableArray(result));};","map":{"version":3,"sources":["String.tsx"],"names":["concat","Animated","string","values","strings","result"],"mappings":"yEAAA,MAAA,CAAA,QAAA,KAAA,yBAAA,CAEQA,GAAAA,CAAAA,M,CAAWC,Q,CAAXD,MAAAA,CAMR,MAAO,IAAME,CAAAA,MAAM,CAANA,QAAAA,CAAAA,MAAAA,CAAS,OAATA,CAGR,CAAA,IAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CADAC,MACA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CADAA,MACA,CAAA,IAAA,CAAA,CAAA,CADAA,CACA,SAAA,CAAA,IAAA,CADAA,CAEH,IAAIA,MAAM,CAANA,MAAAA,GAAJ,CAAA,CAAyB,CACvB,MAAOH,CAAAA,MAAM,CAACI,OAAO,CAArB,CAAqB,CAAR,CAAb,CAEF,IAAMC,CAAAA,MAAM,CAAGF,MAAM,CAANA,MAAAA,CACb,SAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,CAA0BC,OAAO,CAAjC,GAAiC,CAAjC,CAAA,CAAA,CAAA,CAAA,CADaD,CAAAA,CAAf,EAAeA,CAAf,CAIAE,MAAM,CAANA,IAAAA,CAAYD,OAAO,CAACA,OAAO,CAAPA,MAAAA,CAApBC,CAAmB,CAAnBA,EACA,MAAOL,CAAAA,MAAM,CAANA,KAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAAA,CAAP,MAAOA,CAAAA,CAAP,CAZK,CAAA","sourcesContent":["import Animated from \"react-native-reanimated\";\n\nconst { concat } = Animated;\n\nexport type Concatable =\n  | Animated.Adaptable<string>\n  | Animated.Adaptable<number>;\n\nexport const string = (\n  strings: readonly string[],\n  ...values: readonly Concatable[]\n) => {\n  if (values.length === 0) {\n    return concat(strings[0]);\n  }\n  const result = values.reduce<Concatable[]>(\n    (acc, v, idx) => [...acc, strings[idx], v],\n    []\n  );\n  result.push(strings[strings.length - 1]);\n  return concat(...result);\n};\n"]},"metadata":{},"sourceType":"module"}