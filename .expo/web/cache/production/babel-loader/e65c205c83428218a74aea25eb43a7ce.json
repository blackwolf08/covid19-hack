{"ast":null,"code":"'use strict';function hasEnoughResultsToDetermineBestMatch(results){var numberOfResultsWithMaxStrengthProperty=results.filter(function(result){return result.matchStrength;}).length;return numberOfResultsWithMaxStrengthProperty>0&&numberOfResultsWithMaxStrengthProperty===results.length;}function findBestMatch(results){if(!hasEnoughResultsToDetermineBestMatch(results)){return;}return results.reduce(function(bestMatch,result){if(!bestMatch){return result;}if(bestMatch.matchStrength<result.matchStrength){return result;}return bestMatch;});}module.exports=findBestMatch;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/node_modules/credit-card-type/lib/find-best-match.js"],"names":["hasEnoughResultsToDetermineBestMatch","results","numberOfResultsWithMaxStrengthProperty","filter","result","matchStrength","length","findBestMatch","reduce","bestMatch","module","exports"],"mappings":"AAAA,aAEA,QAASA,CAAAA,oCAAT,CAA8CC,OAA9C,CAAuD,CACrD,GAAIC,CAAAA,sCAAsC,CAAGD,OAAO,CAACE,MAAR,CAAe,SAAUC,MAAV,CAAkB,CAC5E,MAAOA,CAAAA,MAAM,CAACC,aAAd,CACD,CAF4C,EAE1CC,MAFH,CAOA,MAAOJ,CAAAA,sCAAsC,CAAG,CAAzC,EACLA,sCAAsC,GAAKD,OAAO,CAACK,MADrD,CAED,CAED,QAASC,CAAAA,aAAT,CAAuBN,OAAvB,CAAgC,CAC9B,GAAI,CAACD,oCAAoC,CAACC,OAAD,CAAzC,CAAoD,CAClD,OACD,CAED,MAAOA,CAAAA,OAAO,CAACO,MAAR,CAAe,SAAUC,SAAV,CAAqBL,MAArB,CAA6B,CACjD,GAAI,CAACK,SAAL,CAAgB,CACd,MAAOL,CAAAA,MAAP,CACD,CAID,GAAIK,SAAS,CAACJ,aAAV,CAA0BD,MAAM,CAACC,aAArC,CAAoD,CAClD,MAAOD,CAAAA,MAAP,CACD,CAED,MAAOK,CAAAA,SAAP,CACD,CAZM,CAAP,CAaD,CAEDC,MAAM,CAACC,OAAP,CAAiBJ,aAAjB","sourcesContent":["'use strict';\n\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n  var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) {\n    return result.matchStrength;\n  }).length;\n\n  // if all possible results have a maxStrength property\n  // that means the card number is sufficiently long\n  // enough to determine conclusively what the type is\n  return numberOfResultsWithMaxStrengthProperty > 0 &&\n    numberOfResultsWithMaxStrengthProperty === results.length;\n}\n\nfunction findBestMatch(results) {\n  if (!hasEnoughResultsToDetermineBestMatch(results)) {\n    return;\n  }\n\n  return results.reduce(function (bestMatch, result) { // eslint-disable-line consistent-return\n    if (!bestMatch) {\n      return result;\n    }\n\n    // if the current best match pattern is less specific\n    // than this result, set the result as the new best match\n    if (bestMatch.matchStrength < result.matchStrength) {\n      return result;\n    }\n\n    return bestMatch;\n  });\n}\n\nmodule.exports = findBestMatch;\n"]},"metadata":{},"sourceType":"script"}