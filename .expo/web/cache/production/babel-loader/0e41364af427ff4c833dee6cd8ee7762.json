{"ast":null,"code":"import Animated from'react-native-reanimated';import Dimensions from\"react-native-web/dist/exports/Dimensions\";var _Dimensions$get=Dimensions.get('window'),height=_Dimensions$get.height,width=_Dimensions$get.width;var cond=Animated.cond,lessOrEq=Animated.lessOrEq,greaterOrEq=Animated.greaterOrEq,add=Animated.add,divide=Animated.divide,sub=Animated.sub,multiply=Animated.multiply,exp=Animated.exp,cos=Animated.cos;export var initialVertRadius=82;export var maxVertRadius=height*0.9;export var initialHorRadius=48;export var maxHorRadius=width*0.8;export var initialSideWidth=15;export var initialWaveCenter=height*0.5;export var sideWidth=function sideWidth(progress){var p1=0.2;var p2=0.8;return cond(lessOrEq(progress,p1),initialSideWidth,cond(greaterOrEq(progress,p2),width,add(initialSideWidth,multiply(width-initialSideWidth,divide(sub(progress,p1),p2-p1)))));};export var waveVertRadius=function waveVertRadius(progress){var p1=0.4;return cond(lessOrEq(progress,0),initialVertRadius,cond(greaterOrEq(progress,p1),maxVertRadius,add(initialVertRadius,multiply(maxVertRadius-initialVertRadius,divide(progress,p1)))));};var waveHorR=function waveHorR(progress,A,B){var p1=0.4;var t=divide(sub(progress,p1),1-p1);var r=40;var m=9.8;var beta=r/(2*m);var k=50;var omega0=k/m;var omega=Math.pow(-Math.pow(beta,2)+Math.pow(omega0,2),0.5);return cond(lessOrEq(progress,0),initialHorRadius,cond(greaterOrEq(progress,1),0,cond(lessOrEq(progress,p1),add(initialHorRadius,multiply(divide(progress,p1),B)),multiply(A,exp(multiply(-beta,t)),cos(multiply(omega,t))))));};export var waveHorRadius=function waveHorRadius(progress){return waveHorR(progress,maxHorRadius,maxHorRadius-initialHorRadius);};export var waveHorRadiusBack=function waveHorRadiusBack(progress){return waveHorR(progress,2*initialHorRadius,initialHorRadius);};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/Screens/LiquidSwipe/WeaveHelpers.js"],"names":["Animated","Dimensions","get","height","width","cond","lessOrEq","greaterOrEq","add","divide","sub","multiply","exp","cos","initialVertRadius","maxVertRadius","initialHorRadius","maxHorRadius","initialSideWidth","initialWaveCenter","sideWidth","progress","p1","p2","waveVertRadius","waveHorR","A","B","t","r","m","beta","k","omega0","omega","waveHorRadius","waveHorRadiusBack"],"mappings":"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","sourcesContent":["import Animated from 'react-native-reanimated';\nimport { Dimensions } from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\nconst {\n  cond,\n  lessOrEq,\n  greaterOrEq,\n  add,\n  divide,\n  sub,\n  multiply,\n  exp,\n  cos\n} = Animated;\n\nexport const initialVertRadius = 82;\nexport const maxVertRadius = height * 0.9;\n\nexport const initialHorRadius = 48;\nexport const maxHorRadius = width * 0.8;\n\nexport const initialSideWidth = 15;\n\nexport const initialWaveCenter = height * 0.5;\n\nexport const sideWidth = progress => {\n  const p1 = 0.2;\n  const p2 = 0.8;\n  return cond(\n    lessOrEq(progress, p1),\n    initialSideWidth,\n    cond(\n      greaterOrEq(progress, p2),\n      width,\n      add(\n        initialSideWidth,\n        multiply(width - initialSideWidth, divide(sub(progress, p1), p2 - p1))\n      )\n    )\n  );\n};\n\nexport const waveVertRadius = progress => {\n  const p1 = 0.4;\n  return cond(\n    lessOrEq(progress, 0),\n    initialVertRadius,\n    cond(\n      greaterOrEq(progress, p1),\n      maxVertRadius,\n      add(\n        initialVertRadius,\n        multiply(maxVertRadius - initialVertRadius, divide(progress, p1))\n      )\n    )\n  );\n};\n\nconst waveHorR = (progress, A, B) => {\n  const p1 = 0.4;\n  const t = divide(sub(progress, p1), 1 - p1);\n  const r = 40;\n  const m = 9.8;\n  const beta = r / (2 * m);\n  const k = 50;\n  const omega0 = k / m;\n  const omega = (-(beta ** 2) + omega0 ** 2) ** 0.5;\n  return cond(\n    lessOrEq(progress, 0),\n    initialHorRadius,\n    cond(\n      greaterOrEq(progress, 1),\n      0,\n      cond(\n        lessOrEq(progress, p1),\n        add(initialHorRadius, multiply(divide(progress, p1), B)),\n        multiply(A, exp(multiply(-beta, t)), cos(multiply(omega, t)))\n      )\n    )\n  );\n};\n\nexport const waveHorRadius = progress =>\n  waveHorR(progress, maxHorRadius, maxHorRadius - initialHorRadius);\n\nexport const waveHorRadiusBack = progress =>\n  waveHorR(progress, 2 * initialHorRadius, initialHorRadius);\n"]},"metadata":{},"sourceType":"module"}