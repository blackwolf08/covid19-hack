{"ast":null,"code":"'use strict';var DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE=19;function verification(isValid,isPotentiallyValid,isCurrentYear){return{isValid:isValid,isPotentiallyValid:isPotentiallyValid,isCurrentYear:isCurrentYear||false};}function expirationYear(value,maxElapsedYear){var currentFirstTwo,currentYear,firstTwo,len,twoDigitYear,valid,isCurrentYear;maxElapsedYear=maxElapsedYear||DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE;if(typeof value!=='string'){return verification(false,false);}if(value.replace(/\\s/g,'')===''){return verification(false,true);}if(!/^\\d*$/.test(value)){return verification(false,false);}len=value.length;if(len<2){return verification(false,true);}currentYear=new Date().getFullYear();if(len===3){firstTwo=value.slice(0,2);currentFirstTwo=String(currentYear).slice(0,2);return verification(false,firstTwo===currentFirstTwo);}if(len>4){return verification(false,false);}value=parseInt(value,10);twoDigitYear=Number(String(currentYear).substr(2,2));if(len===2){isCurrentYear=twoDigitYear===value;valid=value>=twoDigitYear&&value<=twoDigitYear+maxElapsedYear;}else if(len===4){isCurrentYear=currentYear===value;valid=value>=currentYear&&value<=currentYear+maxElapsedYear;}return verification(valid,valid,isCurrentYear);}module.exports=expirationYear;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/node_modules/card-validator/src/expiration-year.js"],"names":["DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE","verification","isValid","isPotentiallyValid","isCurrentYear","expirationYear","value","maxElapsedYear","currentFirstTwo","currentYear","firstTwo","len","twoDigitYear","valid","replace","test","length","Date","getFullYear","slice","String","parseInt","Number","substr","module","exports"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,2CAA2C,CAAG,EAAlD,CAEA,QAASC,CAAAA,YAAT,CAAsBC,OAAtB,CAA+BC,kBAA/B,CAAmDC,aAAnD,CAAkE,CAChE,MAAO,CACLF,OAAO,CAAEA,OADJ,CAELC,kBAAkB,CAAEA,kBAFf,CAGLC,aAAa,CAAEA,aAAa,EAAI,KAH3B,CAAP,CAKD,CAED,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,cAA/B,CAA+C,CAC7C,GAAIC,CAAAA,eAAJ,CAAqBC,WAArB,CAAkCC,QAAlC,CAA4CC,GAA5C,CAAiDC,YAAjD,CAA+DC,KAA/D,CAAsET,aAAtE,CAEAG,cAAc,CAAGA,cAAc,EAAIP,2CAAnC,CAEA,GAAI,MAAOM,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAOL,CAAAA,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAnB,CACD,CACD,GAAIK,KAAK,CAACQ,OAAN,CAAc,KAAd,CAAqB,EAArB,IAA6B,EAAjC,CAAqC,CACnC,MAAOb,CAAAA,YAAY,CAAC,KAAD,CAAQ,IAAR,CAAnB,CACD,CACD,GAAI,CAAC,QAAQc,IAAR,CAAaT,KAAb,CAAL,CAA0B,CACxB,MAAOL,CAAAA,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAnB,CACD,CAEDU,GAAG,CAAGL,KAAK,CAACU,MAAZ,CAEA,GAAIL,GAAG,CAAG,CAAV,CAAa,CACX,MAAOV,CAAAA,YAAY,CAAC,KAAD,CAAQ,IAAR,CAAnB,CACD,CAEDQ,WAAW,CAAG,GAAIQ,CAAAA,IAAJ,GAAWC,WAAX,EAAd,CAEA,GAAIP,GAAG,GAAK,CAAZ,CAAe,CAEbD,QAAQ,CAAGJ,KAAK,CAACa,KAAN,CAAY,CAAZ,CAAe,CAAf,CAAX,CACAX,eAAe,CAAGY,MAAM,CAACX,WAAD,CAAN,CAAoBU,KAApB,CAA0B,CAA1B,CAA6B,CAA7B,CAAlB,CAEA,MAAOlB,CAAAA,YAAY,CAAC,KAAD,CAAQS,QAAQ,GAAKF,eAArB,CAAnB,CACD,CAED,GAAIG,GAAG,CAAG,CAAV,CAAa,CACX,MAAOV,CAAAA,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAnB,CACD,CAEDK,KAAK,CAAGe,QAAQ,CAACf,KAAD,CAAQ,EAAR,CAAhB,CACAM,YAAY,CAAGU,MAAM,CAACF,MAAM,CAACX,WAAD,CAAN,CAAoBc,MAApB,CAA2B,CAA3B,CAA8B,CAA9B,CAAD,CAArB,CAEA,GAAIZ,GAAG,GAAK,CAAZ,CAAe,CACbP,aAAa,CAAGQ,YAAY,GAAKN,KAAjC,CACAO,KAAK,CAAGP,KAAK,EAAIM,YAAT,EAAyBN,KAAK,EAAIM,YAAY,CAAGL,cAAzD,CACD,CAHD,IAGO,IAAII,GAAG,GAAK,CAAZ,CAAe,CACpBP,aAAa,CAAGK,WAAW,GAAKH,KAAhC,CACAO,KAAK,CAAGP,KAAK,EAAIG,WAAT,EAAwBH,KAAK,EAAIG,WAAW,CAAGF,cAAvD,CACD,CAED,MAAON,CAAAA,YAAY,CAACY,KAAD,CAAQA,KAAR,CAAeT,aAAf,CAAnB,CACD,CAEDoB,MAAM,CAACC,OAAP,CAAiBpB,cAAjB","sourcesContent":["'use strict';\n\nvar DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE = 19;\n\nfunction verification(isValid, isPotentiallyValid, isCurrentYear) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    isCurrentYear: isCurrentYear || false\n  };\n}\n\nfunction expirationYear(value, maxElapsedYear) {\n  var currentFirstTwo, currentYear, firstTwo, len, twoDigitYear, valid, isCurrentYear;\n\n  maxElapsedYear = maxElapsedYear || DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE;\n\n  if (typeof value !== 'string') {\n    return verification(false, false);\n  }\n  if (value.replace(/\\s/g, '') === '') {\n    return verification(false, true);\n  }\n  if (!/^\\d*$/.test(value)) {\n    return verification(false, false);\n  }\n\n  len = value.length;\n\n  if (len < 2) {\n    return verification(false, true);\n  }\n\n  currentYear = new Date().getFullYear();\n\n  if (len === 3) {\n    // 20x === 20x\n    firstTwo = value.slice(0, 2);\n    currentFirstTwo = String(currentYear).slice(0, 2);\n\n    return verification(false, firstTwo === currentFirstTwo);\n  }\n\n  if (len > 4) {\n    return verification(false, false);\n  }\n\n  value = parseInt(value, 10);\n  twoDigitYear = Number(String(currentYear).substr(2, 2));\n\n  if (len === 2) {\n    isCurrentYear = twoDigitYear === value;\n    valid = value >= twoDigitYear && value <= twoDigitYear + maxElapsedYear;\n  } else if (len === 4) {\n    isCurrentYear = currentYear === value;\n    valid = value >= currentYear && value <= currentYear + maxElapsedYear;\n  }\n\n  return verification(valid, valid, isCurrentYear);\n}\n\nmodule.exports = expirationYear;\n"]},"metadata":{},"sourceType":"script"}