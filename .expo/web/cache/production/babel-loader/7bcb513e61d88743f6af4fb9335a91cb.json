{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Animated from'react-native-reanimated';import{State}from'react-native-gesture-handler';var Clock=Animated.Clock,Value=Animated.Value,eq=Animated.eq,cond=Animated.cond,add=Animated.add,block=Animated.block,set=Animated.set,stopClock=Animated.stopClock,startClock=Animated.startClock,not=Animated.not,clockRunning=Animated.clockRunning,spring=Animated.spring,SpringUtils=Animated.SpringUtils,and=Animated.and,diffClamp=Animated.diffClamp;export var followPointer=function followPointer(value){var clock=new Clock();var config=_objectSpread({},SpringUtils.makeDefaultConfig(),{toValue:new Value(0)});var state={time:new Value(0),velocity:new Value(0),position:new Value(0),finished:new Value(0)};return block([startClock(clock),set(config.toValue,value),spring(clock,state,config),state.position]);};export var snapProgress=function snapProgress(value,gesture,isBack,point){var offset=new Value(0);var clock=new Clock();var state={time:new Value(0),velocity:new Value(0),position:new Value(0),finished:new Value(0)};var config={toValue:new Value(0),damping:26,mass:1,stiffness:170,overshootClamping:false,restSpeedThreshold:0.01,restDisplacementThreshold:0.01};return block([cond(eq(gesture,State.ACTIVE),[cond(clockRunning(clock),[stopClock(clock),set(offset,state.position)],set(state.position,diffClamp(add(offset,value),0,1)))],[cond(not(clockRunning(clock)),[set(state.time,0),set(state.finished,0),set(config.toValue,point),startClock(clock)]),spring(clock,state,config),cond(and(eq(state.finished,1),clockRunning(clock)),[set(isBack,point),stopClock(clock),set(offset,0)])]),state.position]);};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/Screens/LiquidSwipe/AnimationHelpers.js"],"names":["Animated","State","Clock","Value","eq","cond","add","block","set","stopClock","startClock","not","clockRunning","spring","SpringUtils","and","diffClamp","followPointer","value","clock","config","makeDefaultConfig","toValue","state","time","velocity","position","finished","snapProgress","gesture","isBack","point","offset","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","ACTIVE"],"mappings":"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","sourcesContent":["import Animated from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\n\nconst {\n  Clock,\n  Value,\n  eq,\n  cond,\n  add,\n  block,\n  set,\n  stopClock,\n  startClock,\n  not,\n  clockRunning,\n  spring,\n  SpringUtils,\n  and,\n  diffClamp\n} = Animated;\n\nexport const followPointer = value => {\n  const clock = new Clock();\n  const config = { ...SpringUtils.makeDefaultConfig(), toValue: new Value(0) };\n  const state = {\n    time: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    finished: new Value(0)\n  };\n  return block([\n    startClock(clock),\n    set(config.toValue, value),\n    spring(clock, state, config),\n    state.position\n  ]);\n};\n\nexport const snapProgress = (value, gesture, isBack, point) => {\n  const offset = new Value(0);\n  const clock = new Clock();\n  const state = {\n    time: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    finished: new Value(0)\n  };\n  const config = {\n    toValue: new Value(0),\n    damping: 26,\n    mass: 1,\n    stiffness: 170,\n    overshootClamping: false,\n    restSpeedThreshold: 0.01,\n    restDisplacementThreshold: 0.01\n  };\n  return block([\n    cond(\n      eq(gesture, State.ACTIVE),\n      [\n        cond(\n          clockRunning(clock),\n          [stopClock(clock), set(offset, state.position)],\n          set(state.position, diffClamp(add(offset, value), 0, 1))\n        )\n      ],\n      [\n        cond(not(clockRunning(clock)), [\n          set(state.time, 0),\n          set(state.finished, 0),\n          set(config.toValue, point),\n          startClock(clock)\n        ]),\n        spring(clock, state, config),\n        cond(and(eq(state.finished, 1), clockRunning(clock)), [\n          set(isBack, point),\n          stopClock(clock),\n          set(offset, 0)\n        ])\n      ]\n    ),\n    state.position\n  ]);\n};\n"]},"metadata":{},"sourceType":"module"}