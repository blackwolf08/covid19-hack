{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import React from'react';import PropTypes from'prop-types';import Switch from\"react-native-web/dist/exports/Switch\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Card from\"../Card\";import{Ionicons}from'@expo/vector-icons';import styles,{container}from\"./BottomContainer.style\";import{LinearGradient}from'expo-linear-gradient';var BottomContainer=function BottomContainer(props){var switchText=props.switchText,switchValue=props.switchValue,IconComponent=props.IconComponent,backgroundColor=props.backgroundColor,switchTextStyle=props.switchTextStyle,onPressSettings=props.onPressSettings,disableSettings=props.disableSettings,onSwitchValueChange=props.onSwitchValueChange,usernameOnChangeText=props.usernameOnChangeText,passwordOnChangeText=props.passwordOnChangeText,usernameIconComponent=props.usernameIconComponent,passwordIconComponent=props.passwordIconComponent,usernameTextInputValue=props.usernameTextInputValue,passwordTextInputValue=props.passwordTextInputValue;return React.createElement(View,{style:container('transparent')},React.createElement(LinearGradient,{colors:['rgba(255,255,255,0.8)','rgba(255,255,255,0.2)'],style:{borderRadius:24,paddingBottom:10}},React.createElement(View,{style:styles.containerGlue},React.createElement(Card,_extends({value:usernameTextInputValue,onChangeText:usernameOnChangeText,nameIcon:\"md-person\"},props)),React.createElement(Card,_extends({name:\"key\",secureTextEntry:true,title:\"Password\",type:\"FontAwesome\",value:passwordTextInputValue,placeholder:\"Your Password\",onChangeText:function onChangeText(text){return passwordOnChangeText(text);},nameIcon:\"md-key\"},props))),React.createElement(View,{style:styles.footerContainer},!disableSettings&&React.createElement(TouchableOpacity,{style:{marginRight:'auto',zIndex:999},onPress:onPressSettings},React.createElement(Ionicons,_extends({name:\"ios-settings\",type:\"Ionicons\",color:\"rgba(255,255,255, 0.9)\",size:35},props))),React.createElement(View,{style:styles.rememberMeContainer},React.createElement(Text,{style:switchTextStyle||styles.switchTextStyle},switchText),React.createElement(Switch,{value:switchValue,ios_backgroundColor:\"black\",onValueChange:onSwitchValueChange,trackColor:{true:'default',false:'black'}})))));};BottomContainer.propTypes={switchText:PropTypes.string,disableSettings:PropTypes.bool,backgroundColor:PropTypes.string};BottomContainer.defaultProps={disableSettings:false,switchText:'Remember me',backgroundColor:'rgba(255,255,255,0.45)'};export default BottomContainer;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/components/BottomContainer/index.js"],"names":["React","PropTypes","Card","Ionicons","styles","container","LinearGradient","BottomContainer","props","switchText","switchValue","IconComponent","backgroundColor","switchTextStyle","onPressSettings","disableSettings","onSwitchValueChange","usernameOnChangeText","passwordOnChangeText","usernameIconComponent","passwordIconComponent","usernameTextInputValue","passwordTextInputValue","borderRadius","paddingBottom","containerGlue","text","footerContainer","marginRight","zIndex","rememberMeContainer","true","false","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Text, View, TouchableOpacity } from 'react-native';\nimport Card from '../Card';\nimport { Ionicons } from '@expo/vector-icons';\nimport styles, { container } from './BottomContainer.style';\nimport { LinearGradient } from 'expo-linear-gradient';\nconst BottomContainer = props => {\n  const {\n    switchText,\n    switchValue,\n    IconComponent,\n    backgroundColor,\n    switchTextStyle,\n    onPressSettings,\n    disableSettings,\n    onSwitchValueChange,\n    usernameOnChangeText,\n    passwordOnChangeText,\n    usernameIconComponent,\n    passwordIconComponent,\n    usernameTextInputValue,\n    passwordTextInputValue\n  } = props;\n  return (\n    <View style={container('transparent')}>\n      <LinearGradient\n        colors={['rgba(255,255,255,0.8)', 'rgba(255,255,255,0.2)']}\n        style={{ borderRadius: 24, paddingBottom: 10 }}\n      >\n        <View style={styles.containerGlue}>\n          <Card\n            value={usernameTextInputValue}\n            onChangeText={usernameOnChangeText}\n            nameIcon='md-person'\n            {...props}\n          />\n          <Card\n            name='key'\n            secureTextEntry\n            title='Password'\n            type='FontAwesome'\n            value={passwordTextInputValue}\n            placeholder='Your Password'\n            onChangeText={text => passwordOnChangeText(text)}\n            nameIcon='md-key'\n            {...props}\n          />\n        </View>\n        <View style={styles.footerContainer}>\n          {!disableSettings && (\n            <TouchableOpacity\n              style={{ marginRight: 'auto', zIndex: 999 }}\n              onPress={onPressSettings}\n            >\n              <Ionicons\n                name='ios-settings'\n                type='Ionicons'\n                color='rgba(255,255,255, 0.9)'\n                size={35}\n                {...props}\n              />\n            </TouchableOpacity>\n          )}\n          <View style={styles.rememberMeContainer}>\n            <Text style={switchTextStyle || styles.switchTextStyle}>\n              {switchText}\n            </Text>\n            <Switch\n              value={switchValue}\n              ios_backgroundColor='black'\n              onValueChange={onSwitchValueChange}\n              trackColor={{ true: 'default', false: 'black' }}\n            />\n          </View>\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nBottomContainer.propTypes = {\n  switchText: PropTypes.string,\n  disableSettings: PropTypes.bool,\n  backgroundColor: PropTypes.string\n};\n\nBottomContainer.defaultProps = {\n  // IconComponent: Icon,\n  disableSettings: false,\n  switchText: 'Remember me',\n  backgroundColor: 'rgba(255,255,255,0.45)'\n};\n\nexport default BottomContainer;\n"]},"metadata":{},"sourceType":"module"}