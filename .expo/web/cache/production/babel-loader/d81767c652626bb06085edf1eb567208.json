{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from\"react\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Platform from\"react-native-web/dist/exports/Platform\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import firebase from\"firebase\";import{Button,Block,Input,Text}from\"../../components\";import{theme}from\"../../constants\";import{apiCallPost}from\"../../api\";var VALID_EMAIL=\"superuser@emweb.in\";var VALID_PASSWORD=\"pwd\";var isAndroid=Platform.OS==\"android\"?true:false;var LoginScreen=function(_Component){_inherits(LoginScreen,_Component);var _super=_createSuper(LoginScreen);function LoginScreen(){var _this;_classCallCheck(this,LoginScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:VALID_EMAIL,password:VALID_PASSWORD,errors:[],loading:false};return _this;}_createClass(LoginScreen,[{key:\"handleLogin\",value:function handleLogin(){var navigation,_this$state,email,password,errors;return _regeneratorRuntime.async(function handleLogin$(_context){while(1){switch(_context.prev=_context.next){case 0:navigation=this.props.navigation;_this$state=this.state,email=_this$state.email,password=_this$state.password;errors=[];Keyboard.dismiss();this.setState({loading:true});_context.prev=5;_context.next=8;return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email,password));case 8:_context.next=10;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\",\"logged in\"));case 10:this.setState({loading:false});_context.next=19;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](5);errors.push(\"username\");errors.push(\"password\");this.setState({errors:errors,loading:false});console.log(_context.t0);case 19:if(!errors.length){navigation.navigate(\"App\");}case 20:case\"end\":return _context.stop();}}},null,this,[[5,13]],Promise);}},{key:\"render\",value:function render(){var _this2=this;var navigation=this.props.navigation;var _this$state2=this.state,loading=_this$state2.loading,errors=_this$state2.errors;var hasErrors=function hasErrors(key){return errors.includes(key)?styles.hasErrors:null;};return React.createElement(KeyboardAvoidingView,{style:styles.login,behavior:\"padding\"},React.createElement(Block,{padding:[0,theme.sizes.base*2]},React.createElement(Text,{h1:true,bold:true},\"Login\"),React.createElement(Block,{middle:true},React.createElement(Input,{label:\"Email\",error:hasErrors(\"email\"),style:[styles.input,hasErrors(\"email\")],defaultValue:this.state.email,onChangeText:function onChangeText(text){return _this2.setState({email:text});}}),React.createElement(Input,{secure:true,label:\"Password\",error:hasErrors(\"password\"),style:[styles.input,hasErrors(\"password\")],defaultValue:this.state.password,onChangeText:function onChangeText(text){return _this2.setState({password:text});}}),React.createElement(Button,{gradient:true,onPress:function onPress(){return _this2.handleLogin();}},loading?React.createElement(ActivityIndicator,{size:\"small\",color:\"white\"}):React.createElement(Text,{bold:true,white:true,center:true},\"Login\")),React.createElement(Button,{onPress:function onPress(){return navigation.navigate(\"Forgot\");}},React.createElement(Text,{gray:true,caption:true,center:true,style:{textDecorationLine:\"underline\"}},\"Forgot your password?\")))));}}]);return LoginScreen;}(Component);export{LoginScreen as default};var styles=StyleSheet.create({login:{flex:1,justifyContent:\"center\",marginTop:isAndroid?50:30},input:{borderRadius:0,borderWidth:0,borderBottomColor:theme.colors.gray2,borderBottomWidth:StyleSheet.hairlineWidth},hasErrors:{borderBottomColor:theme.colors.accent}});","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/Screens/LoginScreen/index.js"],"names":["React","Component","firebase","Button","Block","Input","Text","theme","apiCallPost","VALID_EMAIL","VALID_PASSWORD","isAndroid","Platform","OS","LoginScreen","state","email","password","errors","loading","navigation","props","Keyboard","dismiss","setState","auth","signInWithEmailAndPassword","AsyncStorage","setItem","push","console","log","length","navigate","hasErrors","key","includes","styles","login","sizes","base","input","text","handleLogin","textDecorationLine","StyleSheet","create","flex","justifyContent","marginTop","borderRadius","borderWidth","borderBottomColor","colors","gray2","borderBottomWidth","hairlineWidth","accent"],"mappings":"++BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,yeAUA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,KAAxB,CAA+BC,IAA/B,wBACA,OAASC,KAAT,uBAEA,OAASC,WAAT,iBAEA,GAAMC,CAAAA,WAAW,CAAG,oBAApB,CACA,GAAMC,CAAAA,cAAc,CAAG,KAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAGC,QAAQ,CAACC,EAAT,EAAe,SAAf,CAA2B,IAA3B,CAAkC,KAApD,C,GAEqBC,CAAAA,W,kUACnBC,K,CAAQ,CACNC,KAAK,CAAEP,WADD,CAENQ,QAAQ,CAAEP,cAFJ,CAGNQ,MAAM,CAAE,EAHF,CAINC,OAAO,CAAE,KAJH,C,+PAQEC,U,CAAe,KAAKC,K,CAApBD,U,aACoB,KAAKL,K,CAAzBC,K,aAAAA,K,CAAOC,Q,aAAAA,Q,CACTC,M,CAAS,E,CAEfI,QAAQ,CAACC,OAAT,GACA,KAAKC,QAAL,CAAc,CAAEL,OAAO,CAAE,IAAX,CAAd,E,iEAIQjB,QAAQ,CAACuB,IAAT,GAAgBC,0BAAhB,CAA2CV,KAA3C,CAAkDC,QAAlD,C,2DAEAU,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,WAA9B,C,UACN,KAAKJ,QAAL,CAAc,CACZL,OAAO,CAAE,KADG,CAAd,E,iFAIAD,MAAM,CAACW,IAAP,CAAY,UAAZ,EACAX,MAAM,CAACW,IAAP,CAAY,UAAZ,EACA,KAAKL,QAAL,CAAc,CACZN,MAAM,CAANA,MADY,CAEZC,OAAO,CAAE,KAFG,CAAd,EAIAW,OAAO,CAACC,GAAR,c,QAGF,GAAI,CAACb,MAAM,CAACc,MAAZ,CAAoB,CAClBZ,UAAU,CAACa,QAAX,CAAoB,KAApB,EACD,C,iHAGM,oBACCb,CAAAA,UADD,CACgB,KAAKC,KADrB,CACCD,UADD,kBAEqB,KAAKL,KAF1B,CAECI,OAFD,cAECA,OAFD,CAEUD,MAFV,cAEUA,MAFV,CAGP,GAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,QAAUjB,CAAAA,MAAM,CAACkB,QAAP,CAAgBD,GAAhB,EAAuBE,MAAM,CAACH,SAA9B,CAA0C,IAApD,EAAlB,CAEA,MACE,qBAAC,oBAAD,EAAsB,KAAK,CAAEG,MAAM,CAACC,KAApC,CAA2C,QAAQ,CAAC,SAApD,EACE,oBAAC,KAAD,EAAO,OAAO,CAAE,CAAC,CAAD,CAAI/B,KAAK,CAACgC,KAAN,CAAYC,IAAZ,CAAmB,CAAvB,CAAhB,EACE,oBAAC,IAAD,EAAM,EAAE,KAAR,CAAS,IAAI,KAAb,UADF,CAIE,oBAAC,KAAD,EAAO,MAAM,KAAb,EACE,oBAAC,KAAD,EACE,KAAK,CAAC,OADR,CAEE,KAAK,CAAEN,SAAS,CAAC,OAAD,CAFlB,CAGE,KAAK,CAAE,CAACG,MAAM,CAACI,KAAR,CAAeP,SAAS,CAAC,OAAD,CAAxB,CAHT,CAIE,YAAY,CAAE,KAAKnB,KAAL,CAAWC,KAJ3B,CAKE,YAAY,CAAE,sBAAC0B,IAAD,QAAU,CAAA,MAAI,CAAClB,QAAL,CAAc,CAAER,KAAK,CAAE0B,IAAT,CAAd,CAAV,EALhB,EADF,CAQE,oBAAC,KAAD,EACE,MAAM,KADR,CAEE,KAAK,CAAC,UAFR,CAGE,KAAK,CAAER,SAAS,CAAC,UAAD,CAHlB,CAIE,KAAK,CAAE,CAACG,MAAM,CAACI,KAAR,CAAeP,SAAS,CAAC,UAAD,CAAxB,CAJT,CAKE,YAAY,CAAE,KAAKnB,KAAL,CAAWE,QAL3B,CAME,YAAY,CAAE,sBAACyB,IAAD,QAAU,CAAA,MAAI,CAAClB,QAAL,CAAc,CAAEP,QAAQ,CAAEyB,IAAZ,CAAd,CAAV,EANhB,EARF,CAgBE,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,CAAiB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,WAAL,EAAN,EAA1B,EACGxB,OAAO,CACN,oBAAC,iBAAD,EAAmB,IAAI,CAAC,OAAxB,CAAgC,KAAK,CAAC,OAAtC,EADM,CAGN,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,KAAK,KAAhB,CAAiB,MAAM,KAAvB,UAJJ,CAhBF,CA0BE,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMC,CAAAA,UAAU,CAACa,QAAX,CAAoB,QAApB,CAAN,EAAjB,EACE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,OAAO,KAFT,CAGE,MAAM,KAHR,CAIE,KAAK,CAAE,CAAEW,kBAAkB,CAAE,WAAtB,CAJT,0BADF,CA1BF,CAJF,CADF,CADF,CA8CD,C,yBA1FsC3C,S,SAApBa,W,aA6FrB,GAAMuB,CAAAA,MAAM,CAAGQ,UAAU,CAACC,MAAX,CAAkB,CAC/BR,KAAK,CAAE,CACLS,IAAI,CAAE,CADD,CAELC,cAAc,CAAE,QAFX,CAGLC,SAAS,CAAEtC,SAAS,CAAG,EAAH,CAAQ,EAHvB,CADwB,CAM/B8B,KAAK,CAAE,CACLS,YAAY,CAAE,CADT,CAELC,WAAW,CAAE,CAFR,CAGLC,iBAAiB,CAAE7C,KAAK,CAAC8C,MAAN,CAAaC,KAH3B,CAILC,iBAAiB,CAAEV,UAAU,CAACW,aAJzB,CANwB,CAY/BtB,SAAS,CAAE,CACTkB,iBAAiB,CAAE7C,KAAK,CAAC8C,MAAN,CAAaI,MADvB,CAZoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Keyboard,\n  KeyboardAvoidingView,\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  AsyncStorage,\n} from \"react-native\";\nimport firebase from \"firebase\";\n\nimport { Button, Block, Input, Text } from \"../../components\";\nimport { theme } from \"../../constants\";\n\nimport { apiCallPost } from \"../../api\";\n\nconst VALID_EMAIL = \"superuser@emweb.in\";\nconst VALID_PASSWORD = \"pwd\";\n\nconst isAndroid = Platform.OS == \"android\" ? true : false;\n\nexport default class LoginScreen extends Component {\n  state = {\n    email: VALID_EMAIL,\n    password: VALID_PASSWORD,\n    errors: [],\n    loading: false,\n  };\n\n  async handleLogin() {\n    const { navigation } = this.props;\n    const { email, password } = this.state;\n    const errors = [];\n\n    Keyboard.dismiss();\n    this.setState({ loading: true });\n\n    // check with backend API or with some static data\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n\n      await AsyncStorage.setItem(\"token\", \"logged in\");\n      this.setState({\n        loading: false,\n      });\n    } catch (error) {\n      errors.push(\"username\");\n      errors.push(\"password\");\n      this.setState({\n        errors,\n        loading: false,\n      });\n      console.log(error);\n    }\n\n    if (!errors.length) {\n      navigation.navigate(\"App\");\n    }\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const { loading, errors } = this.state;\n    const hasErrors = (key) => (errors.includes(key) ? styles.hasErrors : null);\n\n    return (\n      <KeyboardAvoidingView style={styles.login} behavior=\"padding\">\n        <Block padding={[0, theme.sizes.base * 2]}>\n          <Text h1 bold>\n            Login\n          </Text>\n          <Block middle>\n            <Input\n              label=\"Email\"\n              error={hasErrors(\"email\")}\n              style={[styles.input, hasErrors(\"email\")]}\n              defaultValue={this.state.email}\n              onChangeText={(text) => this.setState({ email: text })}\n            />\n            <Input\n              secure\n              label=\"Password\"\n              error={hasErrors(\"password\")}\n              style={[styles.input, hasErrors(\"password\")]}\n              defaultValue={this.state.password}\n              onChangeText={(text) => this.setState({ password: text })}\n            />\n            <Button gradient onPress={() => this.handleLogin()}>\n              {loading ? (\n                <ActivityIndicator size=\"small\" color=\"white\" />\n              ) : (\n                <Text bold white center>\n                  Login\n                </Text>\n              )}\n            </Button>\n\n            <Button onPress={() => navigation.navigate(\"Forgot\")}>\n              <Text\n                gray\n                caption\n                center\n                style={{ textDecorationLine: \"underline\" }}\n              >\n                Forgot your password?\n              </Text>\n            </Button>\n          </Block>\n        </Block>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  login: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginTop: isAndroid ? 50 : 30,\n  },\n  input: {\n    borderRadius: 0,\n    borderWidth: 0,\n    borderBottomColor: theme.colors.gray2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  hasErrors: {\n    borderBottomColor: theme.colors.accent,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}