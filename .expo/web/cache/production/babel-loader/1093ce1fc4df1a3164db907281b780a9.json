{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import valid from\"card-validator\";import{removeNonNumber,removeLeadingSpaces}from\"./Utilities\";import pick from\"lodash.pick\";var limitLength=function limitLength(){var string=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var maxLength=arguments.length>1?arguments[1]:undefined;return string.substr(0,maxLength);};var addGaps=function addGaps(){var string=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var gaps=arguments.length>1?arguments[1]:undefined;var offsets=[0].concat(gaps).concat([string.length]);return offsets.map(function(end,index){if(index===0)return\"\";var start=offsets[index-1];return string.substr(start,end-start);}).filter(function(part){return part!==\"\";}).join(\" \");};var FALLBACK_CARD={gaps:[4,8,12],lengths:[16],code:{size:3}};var CCFieldFormatter=function CCFieldFormatter(displayedFields){var _this=this;_classCallCheck(this,CCFieldFormatter);this.formatValues=function(values){var card=valid.number(values.number).card||FALLBACK_CARD;return pick({type:card.type,number:_this._formatNumber(values.number,card),expiry:_this._formatExpiry(values.expiry),cvc:_this._formatCVC(values.cvc,card),name:removeLeadingSpaces(values.name),postalCode:(values.postalCode||'').trim()},_this._displayedFields);};this._formatNumber=function(number,card){var numberSanitized=removeNonNumber(number);var maxLength=card.lengths[card.lengths.length-1];var lengthSanitized=limitLength(numberSanitized,maxLength);var formatted=addGaps(lengthSanitized,card.gaps);return formatted;};this._formatExpiry=function(expiry){var sanitized=limitLength(removeNonNumber(expiry),4);if(sanitized.match(/^[2-9]$/)){return\"0\"+sanitized;}if(sanitized.length>2){return sanitized.substr(0,2)+\"/\"+sanitized.substr(2,sanitized.length);}return sanitized;};this._formatCVC=function(cvc,card){var maxCVCLength=card.code.size;return limitLength(removeNonNumber(cvc),maxCVCLength);};this._displayedFields=[].concat(_toConsumableArray(displayedFields),[\"type\"]);};export{CCFieldFormatter as default};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/src/CCFieldFormatter.js"],"names":["valid","removeNonNumber","removeLeadingSpaces","pick","limitLength","string","maxLength","substr","addGaps","gaps","offsets","concat","length","map","end","index","start","filter","part","join","FALLBACK_CARD","lengths","code","size","CCFieldFormatter","displayedFields","formatValues","values","card","number","type","_formatNumber","expiry","_formatExpiry","cvc","_formatCVC","name","postalCode","trim","_displayedFields","numberSanitized","lengthSanitized","formatted","sanitized","match","maxCVCLength"],"mappings":"4IAAA,MAAOA,CAAAA,KAAP,KAAkB,gBAAlB,CACA,OAASC,eAAT,CAA0BC,mBAA1B,mBACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAACC,CAAAA,MAAD,2DAAU,EAAV,IAAcC,CAAAA,SAAd,iDAA4BD,CAAAA,MAAM,CAACE,MAAP,CAAc,CAAd,CAAiBD,SAAjB,CAA5B,EAApB,CACA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAuB,IAAtBH,CAAAA,MAAsB,2DAAb,EAAa,IAATI,CAAAA,IAAS,2CACrC,GAAMC,CAAAA,OAAO,CAAG,CAAC,CAAD,EAAIC,MAAJ,CAAWF,IAAX,EAAiBE,MAAjB,CAAwB,CAACN,MAAM,CAACO,MAAR,CAAxB,CAAhB,CAEA,MAAOF,CAAAA,OAAO,CAACG,GAAR,CAAY,SAACC,GAAD,CAAMC,KAAN,CAAgB,CACjC,GAAIA,KAAK,GAAK,CAAd,CAAiB,MAAO,EAAP,CACjB,GAAMC,CAAAA,KAAK,CAAGN,OAAO,CAACK,KAAK,CAAG,CAAT,CAArB,CACA,MAAOV,CAAAA,MAAM,CAACE,MAAP,CAAcS,KAAd,CAAqBF,GAAG,CAAGE,KAA3B,CAAP,CACD,CAJM,EAIJC,MAJI,CAIG,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAK,EAAb,EAJP,EAIwBC,IAJxB,CAI6B,GAJ7B,CAAP,CAKD,CARD,CAUA,GAAMC,CAAAA,aAAa,CAAG,CAAEX,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAR,CAAoBY,OAAO,CAAE,CAAC,EAAD,CAA7B,CAAmCC,IAAI,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAzC,CAAtB,C,GACqBC,CAAAA,gB,CACnB,0BAAYC,eAAZ,CAA6B,4DAI7BC,YAJ6B,CAId,SAACC,MAAD,CAAY,CACzB,GAAMC,CAAAA,IAAI,CAAG5B,KAAK,CAAC6B,MAAN,CAAaF,MAAM,CAACE,MAApB,EAA4BD,IAA5B,EAAoCR,aAAjD,CAEA,MAAOjB,CAAAA,IAAI,CAAC,CACV2B,IAAI,CAAEF,IAAI,CAACE,IADD,CAEVD,MAAM,CAAE,KAAI,CAACE,aAAL,CAAmBJ,MAAM,CAACE,MAA1B,CAAkCD,IAAlC,CAFE,CAGVI,MAAM,CAAE,KAAI,CAACC,aAAL,CAAmBN,MAAM,CAACK,MAA1B,CAHE,CAIVE,GAAG,CAAE,KAAI,CAACC,UAAL,CAAgBR,MAAM,CAACO,GAAvB,CAA4BN,IAA5B,CAJK,CAKVQ,IAAI,CAAElC,mBAAmB,CAACyB,MAAM,CAACS,IAAR,CALf,CAMVC,UAAU,CAAE,CAACV,MAAM,CAACU,UAAP,EAAqB,EAAtB,EAA0BC,IAA1B,EANF,CAAD,CAOR,KAAI,CAACC,gBAPG,CAAX,CAQD,CAf4B,MAiB7BR,aAjB6B,CAiBb,SAACF,MAAD,CAASD,IAAT,CAAkB,CAChC,GAAMY,CAAAA,eAAe,CAAGvC,eAAe,CAAC4B,MAAD,CAAvC,CACA,GAAMvB,CAAAA,SAAS,CAAGsB,IAAI,CAACP,OAAL,CAAaO,IAAI,CAACP,OAAL,CAAaT,MAAb,CAAsB,CAAnC,CAAlB,CACA,GAAM6B,CAAAA,eAAe,CAAGrC,WAAW,CAACoC,eAAD,CAAkBlC,SAAlB,CAAnC,CACA,GAAMoC,CAAAA,SAAS,CAAGlC,OAAO,CAACiC,eAAD,CAAkBb,IAAI,CAACnB,IAAvB,CAAzB,CACA,MAAOiC,CAAAA,SAAP,CACD,CAvB4B,MAyB7BT,aAzB6B,CAyBb,SAACD,MAAD,CAAY,CAC1B,GAAMW,CAAAA,SAAS,CAAGvC,WAAW,CAACH,eAAe,CAAC+B,MAAD,CAAhB,CAA0B,CAA1B,CAA7B,CACA,GAAIW,SAAS,CAACC,KAAV,CAAgB,SAAhB,CAAJ,CAAgC,CAAE,UAAWD,SAAX,CAAyB,CAC3D,GAAIA,SAAS,CAAC/B,MAAV,CAAmB,CAAvB,CAA0B,CAAE,MAAU+B,CAAAA,SAAS,CAACpC,MAAV,CAAiB,CAAjB,CAAoB,CAApB,CAAV,KAAoCoC,SAAS,CAACpC,MAAV,CAAiB,CAAjB,CAAoBoC,SAAS,CAAC/B,MAA9B,CAApC,CAA8E,CAC1G,MAAO+B,CAAAA,SAAP,CACD,CA9B4B,MAgC7BR,UAhC6B,CAgChB,SAACD,GAAD,CAAMN,IAAN,CAAe,CAC1B,GAAMiB,CAAAA,YAAY,CAAGjB,IAAI,CAACN,IAAL,CAAUC,IAA/B,CACA,MAAOnB,CAAAA,WAAW,CAACH,eAAe,CAACiC,GAAD,CAAhB,CAAuBW,YAAvB,CAAlB,CACD,CAnC4B,CAC3B,KAAKN,gBAAL,8BAA4Bd,eAA5B,GAA6C,MAA7C,GACD,C,QAHkBD,gB","sourcesContent":["import valid from \"card-validator\";\nimport { removeNonNumber, removeLeadingSpaces } from \"./Utilities\";\nimport pick from \"lodash.pick\";\n\nconst limitLength = (string = \"\", maxLength) => string.substr(0, maxLength);\nconst addGaps = (string = \"\", gaps) => {\n  const offsets = [0].concat(gaps).concat([string.length]);\n\n  return offsets.map((end, index) => {\n    if (index === 0) return \"\";\n    const start = offsets[index - 1];\n    return string.substr(start, end - start);\n  }).filter(part => part !== \"\").join(\" \");\n};\n\nconst FALLBACK_CARD = { gaps: [4, 8, 12], lengths: [16], code: { size: 3 } };\nexport default class CCFieldFormatter {\n  constructor(displayedFields) {\n    this._displayedFields = [...displayedFields, \"type\"];\n  }\n\n  formatValues = (values) => {\n    const card = valid.number(values.number).card || FALLBACK_CARD;\n\n    return pick({\n      type: card.type,\n      number: this._formatNumber(values.number, card),\n      expiry: this._formatExpiry(values.expiry),\n      cvc: this._formatCVC(values.cvc, card),\n      name: removeLeadingSpaces(values.name),\n      postalCode: (values.postalCode || '').trim(),\n    }, this._displayedFields);\n  };\n\n  _formatNumber = (number, card) => {\n    const numberSanitized = removeNonNumber(number);\n    const maxLength = card.lengths[card.lengths.length - 1];\n    const lengthSanitized = limitLength(numberSanitized, maxLength);\n    const formatted = addGaps(lengthSanitized, card.gaps);\n    return formatted;\n  };\n\n  _formatExpiry = (expiry) => {\n    const sanitized = limitLength(removeNonNumber(expiry), 4);\n    if (sanitized.match(/^[2-9]$/)) { return `0${sanitized}`; }\n    if (sanitized.length > 2) { return `${sanitized.substr(0, 2)}/${sanitized.substr(2, sanitized.length)}`; }\n    return sanitized;\n  };\n\n  _formatCVC = (cvc, card) => {\n    const maxCVCLength = card.code.size;\n    return limitLength(removeNonNumber(cvc), maxCVCLength);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}