{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createForOfIteratorHelperLoose(o){var i=0;if(typeof Symbol===\"undefined\"||o[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]==null){if(Array.isArray(o)||(o=_unsupportedIterableToArray(o)))return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}i=o[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();return i.next.bind(i);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(n);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{EventEmitter,Platform,CodedError}from'@unimodules/core';import{PermissionStatus}from'unimodules-permissions-interface';import invariant from'invariant';import ExpoLocation from\"./ExpoLocation\";var LocationEventEmitter=new EventEmitter(ExpoLocation);export{PermissionStatus};var LocationAccuracy;(function(LocationAccuracy){LocationAccuracy[LocationAccuracy[\"Lowest\"]=1]=\"Lowest\";LocationAccuracy[LocationAccuracy[\"Low\"]=2]=\"Low\";LocationAccuracy[LocationAccuracy[\"Balanced\"]=3]=\"Balanced\";LocationAccuracy[LocationAccuracy[\"High\"]=4]=\"High\";LocationAccuracy[LocationAccuracy[\"Highest\"]=5]=\"Highest\";LocationAccuracy[LocationAccuracy[\"BestForNavigation\"]=6]=\"BestForNavigation\";})(LocationAccuracy||(LocationAccuracy={}));var LocationActivityType;(function(LocationActivityType){LocationActivityType[LocationActivityType[\"Other\"]=1]=\"Other\";LocationActivityType[LocationActivityType[\"AutomotiveNavigation\"]=2]=\"AutomotiveNavigation\";LocationActivityType[LocationActivityType[\"Fitness\"]=3]=\"Fitness\";LocationActivityType[LocationActivityType[\"OtherNavigation\"]=4]=\"OtherNavigation\";LocationActivityType[LocationActivityType[\"Airborne\"]=5]=\"Airborne\";})(LocationActivityType||(LocationActivityType={}));export{LocationAccuracy as Accuracy,LocationActivityType as ActivityType};export var GeofencingEventType;(function(GeofencingEventType){GeofencingEventType[GeofencingEventType[\"Enter\"]=1]=\"Enter\";GeofencingEventType[GeofencingEventType[\"Exit\"]=2]=\"Exit\";})(GeofencingEventType||(GeofencingEventType={}));export var GeofencingRegionState;(function(GeofencingRegionState){GeofencingRegionState[GeofencingRegionState[\"Unknown\"]=0]=\"Unknown\";GeofencingRegionState[GeofencingRegionState[\"Inside\"]=1]=\"Inside\";GeofencingRegionState[GeofencingRegionState[\"Outside\"]=2]=\"Outside\";})(GeofencingRegionState||(GeofencingRegionState={}));var nextWatchId=0;var headingId;function _getNextWatchId(){nextWatchId++;return nextWatchId;}function _getCurrentWatchId(){return nextWatchId;}var watchCallbacks={};var deviceEventSubscription;var headingEventSub;var googleApiKey;var googleApiUrl='https://maps.googleapis.com/maps/api/geocode/json';export function getProviderStatusAsync(){return _regeneratorRuntime.async(function getProviderStatusAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",ExpoLocation.getProviderStatusAsync());case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function enableNetworkProviderAsync(){return _regeneratorRuntime.async(function enableNetworkProviderAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(Platform.OS==='android')){_context2.next=2;break;}return _context2.abrupt(\"return\",ExpoLocation.enableNetworkProviderAsync());case 2:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function getCurrentPositionAsync(){var options,_args3=arguments;return _regeneratorRuntime.async(function getCurrentPositionAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options=_args3.length>0&&_args3[0]!==undefined?_args3[0]:{};return _context3.abrupt(\"return\",ExpoLocation.getCurrentPositionAsync(options));case 2:case\"end\":return _context3.stop();}}},null,null,null,Promise);}export function getLastKnownPositionAsync(){return _regeneratorRuntime.async(function getLastKnownPositionAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",ExpoLocation.getLastKnownPositionAsync());case 1:case\"end\":return _context4.stop();}}},null,null,null,Promise);}export function getHeadingAsync(){return _regeneratorRuntime.async(function getHeadingAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",new Promise(function _callee(resolve,reject){var tries,headingSub,done,subscription,_tries;return _regeneratorRuntime.async(function _callee$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;if(!headingEventSub){_context5.next=6;break;}tries=0;headingSub=LocationEventEmitter.addListener('Expo.headingChanged',function(_ref){var heading=_ref.heading;if(heading.accuracy>1||tries>5){resolve(heading);LocationEventEmitter.removeSubscription(headingSub);}else{tries+=1;}});_context5.next=12;break;case 6:done=false;_tries=0;_context5.next=10;return _regeneratorRuntime.awrap(watchHeadingAsync(function(heading){if(!done){if(heading.accuracy>1||_tries>5){subscription.remove();resolve(heading);done=true;}else{_tries+=1;}}else{subscription.remove();}}));case 10:subscription=_context5.sent;if(done){subscription.remove();}case 12:_context5.next=17;break;case 14:_context5.prev=14;_context5.t0=_context5[\"catch\"](0);reject(_context5.t0);case 17:case\"end\":return _context5.stop();}}},null,null,[[0,14]],Promise);}));case 1:case\"end\":return _context6.stop();}}},null,null,null,Promise);}export function watchHeadingAsync(callback){return _regeneratorRuntime.async(function watchHeadingAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(headingEventSub){_removeHeadingWatcher(headingId);}headingEventSub=LocationEventEmitter.addListener('Expo.headingChanged',function(_ref2){var watchId=_ref2.watchId,heading=_ref2.heading;var callback=watchCallbacks[watchId];if(callback){callback(heading);}else{ExpoLocation.removeWatchAsync(watchId);}});headingId=_getNextWatchId();watchCallbacks[headingId]=callback;_context7.next=6;return _regeneratorRuntime.awrap(ExpoLocation.watchDeviceHeading(headingId));case 6:return _context7.abrupt(\"return\",{remove:function remove(){_removeHeadingWatcher(headingId);}});case 7:case\"end\":return _context7.stop();}}},null,null,null,Promise);}function _removeHeadingWatcher(watchId){if(!watchCallbacks[watchId]){return;}delete watchCallbacks[watchId];ExpoLocation.removeWatchAsync(watchId);if(headingEventSub){LocationEventEmitter.removeSubscription(headingEventSub);headingEventSub=null;}}function _maybeInitializeEmitterSubscription(){if(!deviceEventSubscription){deviceEventSubscription=LocationEventEmitter.addListener('Expo.locationChanged',function(_ref3){var watchId=_ref3.watchId,location=_ref3.location;var callback=watchCallbacks[watchId];if(callback){callback(location);}else{ExpoLocation.removeWatchAsync(watchId);}});}}export function geocodeAsync(address){return _regeneratorRuntime.async(function geocodeAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",ExpoLocation.geocodeAsync(address).catch(function(error){var platformUsesGoogleMaps=Platform.OS==='android'||Platform.OS==='web';if(platformUsesGoogleMaps&&error.code==='E_NO_GEOCODER'){if(!googleApiKey){throw new CodedError(error.code,error.message+\" Please set a Google API Key to use geocoding.\");}return _googleGeocodeAsync(address);}throw error;}));case 1:case\"end\":return _context8.stop();}}},null,null,null,Promise);}export function reverseGeocodeAsync(location){return _regeneratorRuntime.async(function reverseGeocodeAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(!(typeof location.latitude!=='number'||typeof location.longitude!=='number')){_context9.next=2;break;}throw new TypeError('Location should be an object with number properties `latitude` and `longitude`.');case 2:return _context9.abrupt(\"return\",ExpoLocation.reverseGeocodeAsync(location).catch(function(error){var platformUsesGoogleMaps=Platform.OS==='android'||Platform.OS==='web';if(platformUsesGoogleMaps&&error.code==='E_NO_GEOCODER'){if(!googleApiKey){throw new CodedError(error.code,error.message+\" Please set a Google API Key to use geocoding.\");}return _googleReverseGeocodeAsync(location);}throw error;}));case 3:case\"end\":return _context9.stop();}}},null,null,null,Promise);}export function setApiKey(apiKey){googleApiKey=apiKey;}function _googleGeocodeAsync(address){var result,resultObject;return _regeneratorRuntime.async(function _googleGeocodeAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return _regeneratorRuntime.awrap(fetch(googleApiUrl+\"?key=\"+googleApiKey+\"&address=\"+encodeURI(address)));case 2:result=_context10.sent;_context10.next=5;return _regeneratorRuntime.awrap(result.json());case 5:resultObject=_context10.sent;if(!(resultObject.status==='ZERO_RESULTS')){_context10.next=8;break;}return _context10.abrupt(\"return\",[]);case 8:assertGeocodeResults(resultObject);return _context10.abrupt(\"return\",resultObject.results.map(function(result){var location=result.geometry.location;return{latitude:location.lat,longitude:location.lng};}));case 10:case\"end\":return _context10.stop();}}},null,null,null,Promise);}function _googleReverseGeocodeAsync(options){var result,resultObject;return _regeneratorRuntime.async(function _googleReverseGeocodeAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return _regeneratorRuntime.awrap(fetch(googleApiUrl+\"?key=\"+googleApiKey+\"&latlng=\"+options.latitude+\",\"+options.longitude));case 2:result=_context11.sent;_context11.next=5;return _regeneratorRuntime.awrap(result.json());case 5:resultObject=_context11.sent;if(!(resultObject.status==='ZERO_RESULTS')){_context11.next=8;break;}return _context11.abrupt(\"return\",[]);case 8:assertGeocodeResults(resultObject);return _context11.abrupt(\"return\",resultObject.results.map(function(result){var address={};result.address_components.forEach(function(component){if(component.types.includes('locality')){address.city=component.long_name;}else if(component.types.includes('street_address')){address.street=component.long_name;}else if(component.types.includes('administrative_area_level_1')){address.region=component.long_name;}else if(component.types.includes('country')){address.country=component.long_name;}else if(component.types.includes('postal_code')){address.postalCode=component.long_name;}else if(component.types.includes('point_of_interest')){address.name=component.long_name;}});return address;}));case 10:case\"end\":return _context11.stop();}}},null,null,null,Promise);}function assertGeocodeResults(resultObject){var status=resultObject.status,error_message=resultObject.error_message;if(status!=='ZERO_RESULTS'&&status!=='OK'){if(error_message){throw new CodedError(status,error_message);}else if(status==='UNKNOWN_ERROR'){throw new CodedError(status,'the request could not be processed due to a server error. The request may succeed if you try again.');}throw new CodedError(status,\"An error occurred during geocoding.\");}}function watchPosition(success,error,options){_maybeInitializeEmitterSubscription();var watchId=_getNextWatchId();watchCallbacks[watchId]=success;ExpoLocation.watchPositionImplAsync(watchId,options).catch(function(err){_removeWatcher(watchId);error({watchId:watchId,message:err.message,code:err.code});});return watchId;}export function watchPositionAsync(options,callback){var watchId;return _regeneratorRuntime.async(function watchPositionAsync$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_maybeInitializeEmitterSubscription();watchId=_getNextWatchId();watchCallbacks[watchId]=callback;_context12.next=5;return _regeneratorRuntime.awrap(ExpoLocation.watchPositionImplAsync(watchId,options));case 5:return _context12.abrupt(\"return\",{remove:function remove(){_removeWatcher(watchId);}});case 6:case\"end\":return _context12.stop();}}},null,null,null,Promise);}function clearWatch(watchId){_removeWatcher(watchId);}function _removeWatcher(watchId){if(!watchCallbacks[watchId]){return;}ExpoLocation.removeWatchAsync(watchId);delete watchCallbacks[watchId];if(Object.keys(watchCallbacks).length===0&&deviceEventSubscription){LocationEventEmitter.removeSubscription(deviceEventSubscription);deviceEventSubscription=null;}}function getCurrentPosition(success){var error=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};invariant(typeof success==='function','Must provide a valid success callback.');invariant(typeof options==='object','options must be an object.');_getCurrentPositionAsyncWrapper(success,error,options);}function _getCurrentPositionAsyncWrapper(success,error,options){var result;return _regeneratorRuntime.async(function _getCurrentPositionAsyncWrapper$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_context13.prev=0;_context13.next=3;return _regeneratorRuntime.awrap(ExpoLocation.requestPermissionsAsync());case 3:_context13.next=5;return _regeneratorRuntime.awrap(getCurrentPositionAsync(options));case 5:result=_context13.sent;success(result);_context13.next=12;break;case 9:_context13.prev=9;_context13.t0=_context13[\"catch\"](0);error(_context13.t0);case 12:case\"end\":return _context13.stop();}}},null,null,[[0,9]],Promise);}export function getPermissionsAsync(){return _regeneratorRuntime.async(function getPermissionsAsync$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.next=2;return _regeneratorRuntime.awrap(ExpoLocation.getPermissionsAsync());case 2:return _context14.abrupt(\"return\",_context14.sent);case 3:case\"end\":return _context14.stop();}}},null,null,null,Promise);}export function requestPermissionsAsync(){return _regeneratorRuntime.async(function requestPermissionsAsync$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:_context15.next=2;return _regeneratorRuntime.awrap(ExpoLocation.requestPermissionsAsync());case 2:return _context15.abrupt(\"return\",_context15.sent);case 3:case\"end\":return _context15.stop();}}},null,null,null,Promise);}export function hasServicesEnabledAsync(){return _regeneratorRuntime.async(function hasServicesEnabledAsync$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_context16.next=2;return _regeneratorRuntime.awrap(ExpoLocation.hasServicesEnabledAsync());case 2:return _context16.abrupt(\"return\",_context16.sent);case 3:case\"end\":return _context16.stop();}}},null,null,null,Promise);}function _validateTaskName(taskName){invariant(taskName&&typeof taskName==='string','`taskName` must be a non-empty string.');}export function isBackgroundLocationAvailableAsync(){var providerStatus;return _regeneratorRuntime.async(function isBackgroundLocationAvailableAsync$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:_context17.next=2;return _regeneratorRuntime.awrap(getProviderStatusAsync());case 2:providerStatus=_context17.sent;return _context17.abrupt(\"return\",providerStatus.backgroundModeEnabled);case 4:case\"end\":return _context17.stop();}}},null,null,null,Promise);}export function startLocationUpdatesAsync(taskName){var options,_args18=arguments;return _regeneratorRuntime.async(function startLocationUpdatesAsync$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:options=_args18.length>1&&_args18[1]!==undefined?_args18[1]:{accuracy:LocationAccuracy.Balanced};_validateTaskName(taskName);_context18.next=4;return _regeneratorRuntime.awrap(ExpoLocation.startLocationUpdatesAsync(taskName,options));case 4:case\"end\":return _context18.stop();}}},null,null,null,Promise);}export function stopLocationUpdatesAsync(taskName){return _regeneratorRuntime.async(function stopLocationUpdatesAsync$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:_validateTaskName(taskName);_context19.next=3;return _regeneratorRuntime.awrap(ExpoLocation.stopLocationUpdatesAsync(taskName));case 3:case\"end\":return _context19.stop();}}},null,null,null,Promise);}export function hasStartedLocationUpdatesAsync(taskName){return _regeneratorRuntime.async(function hasStartedLocationUpdatesAsync$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:_validateTaskName(taskName);return _context20.abrupt(\"return\",ExpoLocation.hasStartedLocationUpdatesAsync(taskName));case 2:case\"end\":return _context20.stop();}}},null,null,null,Promise);}function _validateRegions(regions){if(!regions||regions.length===0){throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');}for(var _iterator=_createForOfIteratorHelperLoose(regions),_step;!(_step=_iterator()).done;){var region=_step.value;if(typeof region.latitude!=='number'){throw new TypeError(\"Region's latitude must be a number. Got '\"+region.latitude+\"' instead.\");}if(typeof region.longitude!=='number'){throw new TypeError(\"Region's longitude must be a number. Got '\"+region.longitude+\"' instead.\");}if(typeof region.radius!=='number'){throw new TypeError(\"Region's radius must be a number. Got '\"+region.radius+\"' instead.\");}}}export function startGeofencingAsync(taskName){var regions,_args21=arguments;return _regeneratorRuntime.async(function startGeofencingAsync$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:regions=_args21.length>1&&_args21[1]!==undefined?_args21[1]:[];_validateTaskName(taskName);_validateRegions(regions);_context21.next=5;return _regeneratorRuntime.awrap(ExpoLocation.startGeofencingAsync(taskName,{regions:regions}));case 5:case\"end\":return _context21.stop();}}},null,null,null,Promise);}export function stopGeofencingAsync(taskName){return _regeneratorRuntime.async(function stopGeofencingAsync$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:_validateTaskName(taskName);_context22.next=3;return _regeneratorRuntime.awrap(ExpoLocation.stopGeofencingAsync(taskName));case 3:case\"end\":return _context22.stop();}}},null,null,null,Promise);}export function hasStartedGeofencingAsync(taskName){return _regeneratorRuntime.async(function hasStartedGeofencingAsync$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:_validateTaskName(taskName);return _context23.abrupt(\"return\",ExpoLocation.hasStartedGeofencingAsync(taskName));case 2:case\"end\":return _context23.stop();}}},null,null,null,Promise);}export function installWebGeolocationPolyfill(){if(Platform.OS!=='web'){window.navigator.geolocation={getCurrentPosition:getCurrentPosition,watchPosition:watchPosition,clearWatch:clearWatch,stopObserving:function stopObserving(){}};}}export{LocationEventEmitter as EventEmitter,_getCurrentWatchId};","map":{"version":3,"sources":["../src/Location.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Platform, CodedError } from '@unimodules/core';\nimport {\n  PermissionResponse as UMPermissionResponse,\n  PermissionStatus,\n} from 'unimodules-permissions-interface';\n\nimport invariant from 'invariant';\n\nimport ExpoLocation from './ExpoLocation';\n\nconst LocationEventEmitter = new EventEmitter(ExpoLocation);\n\nexport interface ProviderStatus {\n  locationServicesEnabled: boolean;\n  backgroundModeEnabled: boolean;\n  gpsAvailable?: boolean;\n  networkAvailable?: boolean;\n  passiveAvailable?: boolean;\n}\n\nexport interface LocationOptions {\n  accuracy?: LocationAccuracy;\n  enableHighAccuracy?: boolean;\n  timeInterval?: number;\n  distanceInterval?: number;\n  timeout?: number;\n  mayShowUserSettingsDialog?: boolean;\n}\n\nexport interface LocationData {\n  coords: {\n    latitude: number;\n    longitude: number;\n    altitude: number;\n    accuracy: number;\n    heading: number;\n    speed: number;\n  };\n  timestamp: number;\n}\n\nexport interface HeadingData {\n  trueHeading: number;\n  magHeading: number;\n  accuracy: number;\n}\n\nexport interface GeocodedLocation {\n  latitude: number;\n  longitude: number;\n  altitude?: number;\n  accuracy?: number;\n}\n\nexport interface Address {\n  city: string;\n  street: string;\n  region: string;\n  country: string;\n  postalCode: string;\n  name: string;\n}\n\nexport { PermissionStatus };\n\nexport type PermissionDetailsLocationIOS = {\n  scope: 'whenInUse' | 'always';\n};\n\nexport type PermissionDetailsLocationAndroid = {\n  scope: 'fine' | 'coarse' | 'none';\n};\n\nexport interface PermissionResponse extends UMPermissionResponse {\n  ios?: PermissionDetailsLocationIOS;\n  android?: PermissionDetailsLocationAndroid;\n}\n\ninterface LocationTaskOptions {\n  accuracy?: LocationAccuracy;\n  timeInterval?: number; // Android only\n  distanceInterval?: number;\n  showsBackgroundLocationIndicator?: boolean; // iOS only\n  deferredUpdatesDistance?: number;\n  deferredUpdatesTimeout?: number;\n  deferredUpdatesInterval?: number;\n\n  // iOS only\n  activityType?: LocationActivityType;\n  pausesUpdatesAutomatically?: boolean;\n\n  foregroundService?: {\n    notificationTitle: string;\n    notificationBody: string;\n    notificationColor?: string;\n  };\n}\n\ninterface Region {\n  identifier?: string;\n  latitude: number;\n  longitude: number;\n  radius: number;\n  notifyOnEnter?: boolean;\n  notifyOnExit?: boolean;\n}\n\ntype Subscription = {\n  remove: () => void;\n};\ntype LocationCallback = (data: LocationData) => any;\ntype HeadingCallback = (data: HeadingData) => any;\n\nenum LocationAccuracy {\n  Lowest = 1,\n  Low = 2,\n  Balanced = 3,\n  High = 4,\n  Highest = 5,\n  BestForNavigation = 6,\n}\n\nenum LocationActivityType {\n  Other = 1,\n  AutomotiveNavigation = 2,\n  Fitness = 3,\n  OtherNavigation = 4,\n  Airborne = 5,\n}\n\nexport { LocationAccuracy as Accuracy, LocationActivityType as ActivityType };\n\nexport enum GeofencingEventType {\n  Enter = 1,\n  Exit = 2,\n}\n\nexport enum GeofencingRegionState {\n  Unknown = 0,\n  Inside = 1,\n  Outside = 2,\n}\n\nlet nextWatchId = 0;\nlet headingId;\nfunction _getNextWatchId() {\n  nextWatchId++;\n  return nextWatchId;\n}\nfunction _getCurrentWatchId() {\n  return nextWatchId;\n}\n\nlet watchCallbacks: {\n  [watchId: number]: LocationCallback | HeadingCallback;\n} = {};\n\nlet deviceEventSubscription: Subscription | null;\nlet headingEventSub: Subscription | null;\nlet googleApiKey;\nconst googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\nexport async function getProviderStatusAsync(): Promise<ProviderStatus> {\n  return ExpoLocation.getProviderStatusAsync();\n}\n\nexport async function enableNetworkProviderAsync(): Promise<void> {\n  // If network provider is disabled (user's location mode is set to \"Device only\"),\n  // Android's location provider may not give you any results. Use this method in order to ask the user\n  // to change the location mode to \"High accuracy\" which uses Google Play services and enables network provider.\n  // `getCurrentPositionAsync` and `watchPositionAsync` are doing it automatically anyway.\n\n  if (Platform.OS === 'android') {\n    return ExpoLocation.enableNetworkProviderAsync();\n  }\n}\n\nexport async function getCurrentPositionAsync(\n  options: LocationOptions = {}\n): Promise<LocationData> {\n  return ExpoLocation.getCurrentPositionAsync(options);\n}\n\nexport async function getLastKnownPositionAsync(): Promise<LocationData> {\n  return ExpoLocation.getLastKnownPositionAsync();\n}\n\n// Start Compass Module\n\n// To simplify, we will call watchHeadingAsync and wait for one update To ensure accuracy, we wait\n// for a couple of watch updates if the data has low accuracy\nexport async function getHeadingAsync(): Promise<HeadingData> {\n  return new Promise<HeadingData>(async (resolve, reject) => {\n    try {\n      // If there is already a compass active (would be a watch)\n      if (headingEventSub) {\n        let tries = 0;\n        const headingSub = LocationEventEmitter.addListener(\n          'Expo.headingChanged',\n          ({ heading }: { heading: HeadingData }) => {\n            if (heading.accuracy > 1 || tries > 5) {\n              resolve(heading);\n              LocationEventEmitter.removeSubscription(headingSub);\n            } else {\n              tries += 1;\n            }\n          }\n        );\n      } else {\n        let done = false;\n        let subscription;\n        let tries = 0;\n        subscription = await watchHeadingAsync((heading: HeadingData) => {\n          if (!done) {\n            if (heading.accuracy > 1 || tries > 5) {\n              subscription.remove();\n              resolve(heading);\n              done = true;\n            } else {\n              tries += 1;\n            }\n          } else {\n            subscription.remove();\n          }\n        });\n\n        if (done) {\n          subscription.remove();\n        }\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport async function watchHeadingAsync(\n  callback: HeadingCallback\n): Promise<{ remove: () => void }> {\n  // Check if there is already a compass event watch.\n  if (headingEventSub) {\n    _removeHeadingWatcher(headingId);\n  }\n\n  headingEventSub = LocationEventEmitter.addListener(\n    'Expo.headingChanged',\n    ({ watchId, heading }: { watchId: string; heading: HeadingData }) => {\n      const callback = watchCallbacks[watchId];\n      if (callback) {\n        callback(heading);\n      } else {\n        ExpoLocation.removeWatchAsync(watchId);\n      }\n    }\n  );\n\n  headingId = _getNextWatchId();\n  watchCallbacks[headingId] = callback;\n  await ExpoLocation.watchDeviceHeading(headingId);\n  return {\n    remove() {\n      _removeHeadingWatcher(headingId);\n    },\n  };\n}\n\n// Removes the compass listener and sub from JS and Native\nfunction _removeHeadingWatcher(watchId) {\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n  delete watchCallbacks[watchId];\n  ExpoLocation.removeWatchAsync(watchId);\n  if (headingEventSub) {\n    LocationEventEmitter.removeSubscription(headingEventSub);\n    headingEventSub = null;\n  }\n}\n// End Compass Module\n\nfunction _maybeInitializeEmitterSubscription() {\n  if (!deviceEventSubscription) {\n    deviceEventSubscription = LocationEventEmitter.addListener(\n      'Expo.locationChanged',\n      ({ watchId, location }: { watchId: string; location: LocationData }) => {\n        const callback = watchCallbacks[watchId];\n        if (callback) {\n          callback(location);\n        } else {\n          ExpoLocation.removeWatchAsync(watchId);\n        }\n      }\n    );\n  }\n}\n\nexport async function geocodeAsync(address: string): Promise<Array<GeocodedLocation>> {\n  return ExpoLocation.geocodeAsync(address).catch(error => {\n    const platformUsesGoogleMaps = Platform.OS === 'android' || Platform.OS === 'web';\n\n    if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new CodedError(\n          error.code,\n          `${error.message} Please set a Google API Key to use geocoding.`\n        );\n      }\n      return _googleGeocodeAsync(address);\n    }\n    throw error;\n  });\n}\n\nexport async function reverseGeocodeAsync(location: {\n  latitude: number;\n  longitude: number;\n}): Promise<Address[]> {\n  if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n    throw new TypeError(\n      'Location should be an object with number properties `latitude` and `longitude`.'\n    );\n  }\n  return ExpoLocation.reverseGeocodeAsync(location).catch(error => {\n    const platformUsesGoogleMaps = Platform.OS === 'android' || Platform.OS === 'web';\n\n    if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new CodedError(\n          error.code,\n          `${error.message} Please set a Google API Key to use geocoding.`\n        );\n      }\n      return _googleReverseGeocodeAsync(location);\n    }\n    throw error;\n  });\n}\n\nexport function setApiKey(apiKey: string) {\n  googleApiKey = apiKey;\n}\n\nasync function _googleGeocodeAsync(address: string): Promise<GeocodedLocation[]> {\n  const result = await fetch(`${googleApiUrl}?key=${googleApiKey}&address=${encodeURI(address)}`);\n  const resultObject = await result.json();\n\n  if (resultObject.status === 'ZERO_RESULTS') {\n    return [];\n  }\n\n  assertGeocodeResults(resultObject);\n\n  return resultObject.results.map(result => {\n    let location = result.geometry.location;\n    // TODO: This is missing a lot of props\n    return {\n      latitude: location.lat,\n      longitude: location.lng,\n    };\n  });\n}\n\nasync function _googleReverseGeocodeAsync(options: {\n  latitude: number;\n  longitude: number;\n}): Promise<Address[]> {\n  const result = await fetch(\n    `${googleApiUrl}?key=${googleApiKey}&latlng=${options.latitude},${options.longitude}`\n  );\n  const resultObject = await result.json();\n\n  if (resultObject.status === 'ZERO_RESULTS') {\n    return [];\n  }\n\n  assertGeocodeResults(resultObject);\n\n  return resultObject.results.map(result => {\n    const address: any = {};\n\n    result.address_components.forEach(component => {\n      if (component.types.includes('locality')) {\n        address.city = component.long_name;\n      } else if (component.types.includes('street_address')) {\n        address.street = component.long_name;\n      } else if (component.types.includes('administrative_area_level_1')) {\n        address.region = component.long_name;\n      } else if (component.types.includes('country')) {\n        address.country = component.long_name;\n      } else if (component.types.includes('postal_code')) {\n        address.postalCode = component.long_name;\n      } else if (component.types.includes('point_of_interest')) {\n        address.name = component.long_name;\n      }\n    });\n    return address as Address;\n  });\n}\n\n// https://developers.google.com/maps/documentation/geocoding/intro\nfunction assertGeocodeResults(resultObject: any): void {\n  const { status, error_message } = resultObject;\n  if (status !== 'ZERO_RESULTS' && status !== 'OK') {\n    if (error_message) {\n      throw new CodedError(status, error_message);\n    } else if (status === 'UNKNOWN_ERROR') {\n      throw new CodedError(\n        status,\n        'the request could not be processed due to a server error. The request may succeed if you try again.'\n      );\n    }\n    throw new CodedError(status, `An error occurred during geocoding.`);\n  }\n}\n\n// Polyfill: navigator.geolocation.watchPosition\nfunction watchPosition(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = success;\n\n  ExpoLocation.watchPositionImplAsync(watchId, options).catch(err => {\n    _removeWatcher(watchId);\n    error({ watchId, message: err.message, code: err.code });\n  });\n\n  return watchId;\n}\n\nexport async function watchPositionAsync(options: LocationOptions, callback: LocationCallback) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = callback;\n  await ExpoLocation.watchPositionImplAsync(watchId, options);\n\n  return {\n    remove() {\n      _removeWatcher(watchId);\n    },\n  };\n}\n\n// Polyfill: navigator.geolocation.clearWatch\nfunction clearWatch(watchId: number) {\n  _removeWatcher(watchId);\n}\n\nfunction _removeWatcher(watchId) {\n  // Do nothing if we have already removed the subscription\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n\n  ExpoLocation.removeWatchAsync(watchId);\n  delete watchCallbacks[watchId];\n  if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n    LocationEventEmitter.removeSubscription(deviceEventSubscription);\n    deviceEventSubscription = null;\n  }\n}\n\ntype GeoSuccessCallback = (data: LocationData) => void;\ntype GeoErrorCallback = (error: any) => void;\n\nfunction getCurrentPosition(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback = () => {},\n  options: LocationOptions = {}\n): void {\n  invariant(typeof success === 'function', 'Must provide a valid success callback.');\n\n  invariant(typeof options === 'object', 'options must be an object.');\n\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\n\n// This function exists to let us continue to return undefined from getCurrentPosition, while still\n// using async/await for the internal implementation of it\nasync function _getCurrentPositionAsyncWrapper(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n): Promise<any> {\n  try {\n    await ExpoLocation.requestPermissionsAsync();\n    const result = await getCurrentPositionAsync(options);\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  return await ExpoLocation.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  return await ExpoLocation.requestPermissionsAsync();\n}\n\n// --- Location service\n\nexport async function hasServicesEnabledAsync(): Promise<boolean> {\n  return await ExpoLocation.hasServicesEnabledAsync();\n}\n\n// --- Background location updates\n\nfunction _validateTaskName(taskName: string) {\n  invariant(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n}\n\nexport async function isBackgroundLocationAvailableAsync(): Promise<boolean> {\n  const providerStatus = await getProviderStatusAsync();\n  return providerStatus.backgroundModeEnabled;\n}\n\nexport async function startLocationUpdatesAsync(\n  taskName: string,\n  options: LocationTaskOptions = { accuracy: LocationAccuracy.Balanced }\n): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.startLocationUpdatesAsync(taskName, options);\n}\n\nexport async function stopLocationUpdatesAsync(taskName: string): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.stopLocationUpdatesAsync(taskName);\n}\n\nexport async function hasStartedLocationUpdatesAsync(taskName: string): Promise<boolean> {\n  _validateTaskName(taskName);\n  return ExpoLocation.hasStartedLocationUpdatesAsync(taskName);\n}\n\n// --- Geofencing\n\nfunction _validateRegions(regions: Array<Region>) {\n  if (!regions || regions.length === 0) {\n    throw new Error(\n      'Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions'\n    );\n  }\n  for (const region of regions) {\n    if (typeof region.latitude !== 'number') {\n      throw new TypeError(`Region's latitude must be a number. Got '${region.latitude}' instead.`);\n    }\n    if (typeof region.longitude !== 'number') {\n      throw new TypeError(\n        `Region's longitude must be a number. Got '${region.longitude}' instead.`\n      );\n    }\n    if (typeof region.radius !== 'number') {\n      throw new TypeError(`Region's radius must be a number. Got '${region.radius}' instead.`);\n    }\n  }\n}\n\nexport async function startGeofencingAsync(\n  taskName: string,\n  regions: Array<Region> = []\n): Promise<void> {\n  _validateTaskName(taskName);\n  _validateRegions(regions);\n  await ExpoLocation.startGeofencingAsync(taskName, { regions });\n}\n\nexport async function stopGeofencingAsync(taskName: string): Promise<void> {\n  _validateTaskName(taskName);\n  await ExpoLocation.stopGeofencingAsync(taskName);\n}\n\nexport async function hasStartedGeofencingAsync(taskName: string): Promise<boolean> {\n  _validateTaskName(taskName);\n  return ExpoLocation.hasStartedGeofencingAsync(taskName);\n}\n\nexport function installWebGeolocationPolyfill(): void {\n  if (Platform.OS !== 'web') {\n    // Polyfill navigator.geolocation for interop with the core react-native and web API approach to\n    // geolocation\n    // @ts-ignore\n    window.navigator.geolocation = {\n      getCurrentPosition,\n      watchPosition,\n      clearWatch,\n\n      // We don't polyfill stopObserving, this is an internal method that probably should not even exist\n      // in react-native docs\n      stopObserving: () => {},\n    };\n  }\n}\n\nexport {\n  // For internal purposes\n  LocationEventEmitter as EventEmitter,\n  _getCurrentWatchId,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}