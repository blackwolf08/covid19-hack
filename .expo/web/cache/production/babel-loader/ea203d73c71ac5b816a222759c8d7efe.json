{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Animated,{Easing}from\"react-native-reanimated\";import{State}from\"react-native-gesture-handler\";import{useMemoOne}from\"use-memo-one\";import{bin}from\"./Math\";var Value=Animated.Value,cond=Animated.cond,eq=Animated.eq,block=Animated.block,set=Animated.set,Clock=Animated.Clock,spring=Animated.spring,startClock=Animated.startClock,timing=Animated.timing,neq=Animated.neq,useCode=Animated.useCode;export var withTransition=function withTransition(value){var timingConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var gestureState=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Value(State.UNDETERMINED);var clock=new Clock();var state={finished:new Value(0),frameTime:new Value(0),position:new Value(0),time:new Value(0)};var config=_objectSpread({toValue:new Value(0),duration:250,easing:Easing.linear},timingConfig);return block([startClock(clock),cond(neq(config.toValue,value),[set(state.frameTime,0),set(state.time,0),set(state.finished,0),set(config.toValue,value)]),cond(eq(gestureState,State.ACTIVE),[set(state.position,value)],timing(clock,state,config)),state.position]);};export var withSpringTransition=function withSpringTransition(value){var springConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var velocity=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var gestureState=arguments.length>3&&arguments[3]!==undefined?arguments[3]:new Value(State.UNDETERMINED);var clock=new Clock();var state={finished:new Value(0),velocity:new Value(0),position:new Value(0),time:new Value(0)};var config=_objectSpread({toValue:new Value(0),damping:15,mass:1,stiffness:150,overshootClamping:false,restSpeedThreshold:1,restDisplacementThreshold:1},springConfig);return block([startClock(clock),set(config.toValue,value),cond(eq(gestureState,State.ACTIVE),[set(state.velocity,velocity),set(state.position,value)],spring(clock,state,config)),state.position]);};export var withTimingTransition=withTransition;export var useTransition=function useTransition(state){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var value=useMemoOne(function(){return new Value(0);},[]);useCode(function(){return set(value,typeof state===\"boolean\"?bin(state):state);},[state,value]);var transition=useMemoOne(function(){return withTransition(value,config);},[value]);return transition;};export var useSpringTransition=function useSpringTransition(state){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var value=useMemoOne(function(){return new Value(0);},[]);useCode(function(){return set(value,typeof state===\"boolean\"?bin(state):state);},[state,value]);var transition=useMemoOne(function(){return withSpringTransition(value,config);},[value]);return transition;};export var useTimingTransition=useTransition;","map":{"version":3,"sources":["Transitions.ts"],"names":["Value","cond","eq","block","set","Clock","spring","startClock","timing","neq","useCode","Animated","withTransition","timingConfig","gestureState","State","clock","state","finished","frameTime","position","time","config","toValue","duration","easing","Easing","withSpringTransition","springConfig","velocity","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","withTimingTransition","useTransition","value","useMemoOne","bin","transition","useSpringTransition","useTimingTransition"],"mappings":"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","sourcesContent":["import Animated, { Easing } from \"react-native-reanimated\";\nimport { State } from \"react-native-gesture-handler\";\nimport { useMemoOne } from \"use-memo-one\";\n\nimport { bin } from \"./Math\";\nimport { SpringConfig, TimingConfig } from \"./Animations\";\n\nconst {\n  Value,\n  cond,\n  eq,\n  block,\n  set,\n  Clock,\n  spring,\n  startClock,\n  timing,\n  neq,\n  useCode\n} = Animated;\n\nexport const withTransition = (\n  value: Animated.Node<number>,\n  timingConfig: TimingConfig = {},\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED)\n) => {\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    frameTime: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  const config = {\n    toValue: new Value(0),\n    duration: 250,\n    easing: Easing.linear,\n    ...timingConfig\n  };\n  return block([\n    startClock(clock),\n    cond(neq(config.toValue, value), [\n      set(state.frameTime, 0),\n      set(state.time, 0),\n      set(state.finished, 0),\n      set(config.toValue, value)\n    ]),\n    cond(\n      eq(gestureState, State.ACTIVE),\n      [set(state.position, value)],\n      timing(clock, state, config)\n    ),\n    state.position\n  ]);\n};\n\nexport const withSpringTransition = (\n  value: Animated.Node<number>,\n  springConfig: SpringConfig = {},\n  velocity: Animated.Adaptable<number> = 0,\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED)\n) => {\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  const config = {\n    toValue: new Value(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1,\n    ...springConfig\n  };\n  return block([\n    startClock(clock),\n    set(config.toValue, value),\n    cond(\n      eq(gestureState, State.ACTIVE),\n      [set(state.velocity, velocity), set(state.position, value)],\n      spring(clock, state, config)\n    ),\n    state.position\n  ]);\n};\n\nexport const withTimingTransition = withTransition;\n\nexport const useTransition = (\n  state: boolean | number,\n  config: TimingConfig = {}\n) => {\n  const value = useMemoOne(() => new Value(0), []);\n  useCode(() => set(value, typeof state === \"boolean\" ? bin(state) : state), [\n    state,\n    value\n  ]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transition = useMemoOne(() => withTransition(value, config), [value]);\n  return transition;\n};\n\nexport const useSpringTransition = (\n  state: boolean | number,\n  config: SpringConfig = {}\n) => {\n  const value = useMemoOne(() => new Value(0), []);\n  useCode(() => set(value, typeof state === \"boolean\" ? bin(state) : state), [\n    state,\n    value\n  ]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transition = useMemoOne(() => withSpringTransition(value, config), [\n    value\n  ]);\n  return transition;\n};\n\nexport const useTimingTransition = useTransition;\n"]},"metadata":{},"sourceType":"module"}