{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import Animated from'react-native-reanimated';import TabBarItem from\"./TabBarItem\";import TabBarIndicator from\"./TabBarIndicator\";import memoize from\"./memoize\";var TabBar=function(_React$Component){_inherits(TabBar,_React$Component);var _super=_createSuper(TabBar);function TabBar(){var _this;_classCallCheck(this,TabBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{layout:{width:0,height:0},tabWidths:{}});_defineProperty(_assertThisInitialized(_this),\"measuredTabWidths\",{});_defineProperty(_assertThisInitialized(_this),\"scrollAmount\",new Animated.Value(0));_defineProperty(_assertThisInitialized(_this),\"scrollView\",void 0);_defineProperty(_assertThisInitialized(_this),\"getFlattenedTabWidth\",function(style){var tabStyle=StyleSheet.flatten(style);return tabStyle?tabStyle.width:undefined;});_defineProperty(_assertThisInitialized(_this),\"getComputedTabWidth\",function(index,layout,routes,scrollEnabled,tabWidths,flattenedWidth){if(flattenedWidth==='auto'){return tabWidths[routes[index].key]||0;}switch(typeof flattenedWidth){case'number':return flattenedWidth;case'string':if(flattenedWidth.endsWith('%')){var width=parseFloat(flattenedWidth);if(Number.isFinite(width)){return layout.width*(width/100);}}}if(scrollEnabled){return layout.width/5*2;}return layout.width/routes.length;});_defineProperty(_assertThisInitialized(_this),\"getMemoizedTabWidthGettter\",memoize(function(layout,routes,scrollEnabled,tabWidths,flattenedWidth){return function(i){return _this.getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,flattenedWidth);};}));_defineProperty(_assertThisInitialized(_this),\"getMaxScrollDistance\",function(tabBarWidth,layoutWidth){return tabBarWidth-layoutWidth;});_defineProperty(_assertThisInitialized(_this),\"getTabBarWidth\",function(props,state){var layout=state.layout,tabWidths=state.tabWidths;var scrollEnabled=props.scrollEnabled,tabStyle=props.tabStyle;var routes=props.navigationState.routes;return routes.reduce(function(acc,_,i){return acc+_this.getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,_this.getFlattenedTabWidth(tabStyle));},0);});_defineProperty(_assertThisInitialized(_this),\"normalizeScrollValue\",function(props,state,value){var layout=state.layout;var tabBarWidth=_this.getTabBarWidth(props,state);var maxDistance=_this.getMaxScrollDistance(tabBarWidth,layout.width);var scrollValue=Math.max(Math.min(value,maxDistance),0);if(Platform.OS==='android'&&I18nManager.isRTL){return maxDistance-scrollValue;}return scrollValue;});_defineProperty(_assertThisInitialized(_this),\"getScrollAmount\",function(props,state,index){var layout=state.layout,tabWidths=state.tabWidths;var scrollEnabled=props.scrollEnabled,tabStyle=props.tabStyle;var routes=props.navigationState.routes;var centerDistance=Array.from({length:index+1}).reduce(function(total,_,i){var tabWidth=_this.getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,_this.getFlattenedTabWidth(tabStyle));return total+(index===i?tabWidth/2:tabWidth);},0);var scrollAmount=centerDistance-layout.width/2;return _this.normalizeScrollValue(props,state,scrollAmount);});_defineProperty(_assertThisInitialized(_this),\"resetScroll\",function(index){if(_this.props.scrollEnabled){_this.scrollView&&_this.scrollView.scrollTo({x:_this.getScrollAmount(_this.props,_this.state,index),animated:true});}});_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;if(_this.state.layout.width===width&&_this.state.layout.height===height){return;}requestAnimationFrame(function(){return requestAnimationFrame(function(){return _this.setState({layout:{height:height,width:width}});});});});_defineProperty(_assertThisInitialized(_this),\"getTranslateX\",memoize(function(scrollAmount,maxScrollDistance){return Animated.multiply(Platform.OS==='android'&&I18nManager.isRTL?Animated.sub(maxScrollDistance,scrollAmount):scrollAmount,I18nManager.isRTL?1:-1);}));return _this;}_createClass(TabBar,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var navigationState=this.props.navigationState;var _this$state=this.state,layout=_this$state.layout,tabWidths=_this$state.tabWidths;if(prevProps.navigationState.routes.length!==navigationState.routes.length||prevProps.navigationState.index!==navigationState.index||prevState.layout.width!==layout.width||prevState.tabWidths!==tabWidths){if(this.getFlattenedTabWidth(this.props.tabStyle)==='auto'&&!(layout.width&&navigationState.routes.every(function(r){return typeof tabWidths[r.key]==='number';}))){return;}this.resetScroll(navigationState.index);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,position=_this$props.position,navigationState=_this$props.navigationState,jumpTo=_this$props.jumpTo,scrollEnabled=_this$props.scrollEnabled,bounces=_this$props.bounces,getAccessibilityLabel=_this$props.getAccessibilityLabel,getAccessible=_this$props.getAccessible,getLabelText=_this$props.getLabelText,getTestID=_this$props.getTestID,renderBadge=_this$props.renderBadge,renderIcon=_this$props.renderIcon,renderLabel=_this$props.renderLabel,activeColor=_this$props.activeColor,inactiveColor=_this$props.inactiveColor,pressColor=_this$props.pressColor,pressOpacity=_this$props.pressOpacity,onTabPress=_this$props.onTabPress,onTabLongPress=_this$props.onTabLongPress,tabStyle=_this$props.tabStyle,labelStyle=_this$props.labelStyle,indicatorStyle=_this$props.indicatorStyle,contentContainerStyle=_this$props.contentContainerStyle,style=_this$props.style,indicatorContainerStyle=_this$props.indicatorContainerStyle;var _this$state2=this.state,layout=_this$state2.layout,tabWidths=_this$state2.tabWidths;var routes=navigationState.routes;var isWidthDynamic=this.getFlattenedTabWidth(tabStyle)==='auto';var tabBarWidth=this.getTabBarWidth(this.props,this.state);var tabBarWidthPercent=\"\".concat(routes.length*40,\"%\");var translateX=this.getTranslateX(this.scrollAmount,this.getMaxScrollDistance(tabBarWidth,layout.width));return React.createElement(Animated.View,{onLayout:this.handleLayout,style:[styles.tabBar,style]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.indicatorContainer,scrollEnabled?{transform:[{translateX:translateX}]}:null,tabBarWidth?{width:tabBarWidth}:scrollEnabled?{width:tabBarWidthPercent}:null,indicatorContainerStyle]},this.props.renderIndicator({position:position,layout:layout,navigationState:navigationState,jumpTo:jumpTo,width:isWidthDynamic?'auto':\"\".concat(100/routes.length,\"%\"),style:indicatorStyle,getTabWidth:this.getMemoizedTabWidthGettter(layout,routes,scrollEnabled,tabWidths,this.getFlattenedTabWidth(tabStyle))})),React.createElement(View,{style:styles.scroll},React.createElement(Animated.ScrollView,{horizontal:true,accessibilityRole:\"tablist\",keyboardShouldPersistTaps:\"handled\",scrollEnabled:scrollEnabled,bounces:bounces,alwaysBounceHorizontal:false,scrollsToTop:false,showsHorizontalScrollIndicator:false,automaticallyAdjustContentInsets:false,overScrollMode:\"never\",contentContainerStyle:[styles.tabContent,scrollEnabled?{width:tabBarWidth||tabBarWidthPercent}:styles.container,contentContainerStyle],scrollEventThrottle:16,onScroll:Animated.event([{nativeEvent:{contentOffset:{x:this.scrollAmount}}}]),ref:function ref(el){_this2.scrollView=el===null||el===void 0?void 0:el.getNode();}},routes.map(function(route){return React.createElement(TabBarItem,{onLayout:isWidthDynamic?function(e){_this2.measuredTabWidths[route.key]=e.nativeEvent.layout.width;if(routes.every(function(r){return typeof _this2.measuredTabWidths[r.key]==='number';})){_this2.setState({tabWidths:_objectSpread({},_this2.measuredTabWidths)});}}:undefined,key:route.key,position:position,route:route,navigationState:navigationState,getAccessibilityLabel:getAccessibilityLabel,getAccessible:getAccessible,getLabelText:getLabelText,getTestID:getTestID,renderBadge:renderBadge,renderIcon:renderIcon,renderLabel:renderLabel,activeColor:activeColor,inactiveColor:inactiveColor,pressColor:pressColor,pressOpacity:pressOpacity,onPress:function onPress(){var event={route:route,defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}_this2.props.jumpTo(route.key);},onLongPress:function onLongPress(){return onTabLongPress===null||onTabLongPress===void 0?void 0:onTabLongPress({route:route});},labelStyle:labelStyle,style:tabStyle});}))));}}]);return TabBar;}(React.Component);export{TabBar as default};_defineProperty(TabBar,\"defaultProps\",{getLabelText:function getLabelText(_ref){var route=_ref.route;return typeof route.title==='string'?route.title.toUpperCase():route.title;},getAccessible:function getAccessible(_ref2){var route=_ref2.route;return typeof route.accessible!=='undefined'?route.accessible:true;},getAccessibilityLabel:function getAccessibilityLabel(_ref3){var route=_ref3.route;return typeof route.accessibilityLabel==='string'?route.accessibilityLabel:typeof route.title==='string'?route.title:undefined;},getTestID:function getTestID(_ref4){var route=_ref4.route;return route.testID;},renderIndicator:function renderIndicator(props){return React.createElement(TabBarIndicator,props);}});var styles=StyleSheet.create({container:{flex:1},scroll:{overflow:Platform.select({default:'scroll',web:undefined})},tabBar:{backgroundColor:'#2196f3',elevation:4,shadowColor:'black',shadowOpacity:0.1,shadowRadius:StyleSheet.hairlineWidth,shadowOffset:{height:StyleSheet.hairlineWidth,width:0},zIndex:1},tabContent:{flexDirection:'row',flexWrap:'nowrap'},indicatorContainer:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"sources":["TabBar.tsx"],"names":["TabBar","React","getLabelText","route","getAccessible","getAccessibilityLabel","getTestID","renderIndicator","props","layout","width","height","tabWidths","navigationState","prevProps","prevState","r","Animated","style","tabStyle","StyleSheet","flattenedWidth","routes","parseFloat","Number","memoize","i","tabBarWidth","acc","maxDistance","scrollValue","Math","Platform","I18nManager","centerDistance","length","index","tabWidth","total","scrollAmount","x","animated","e","requestAnimationFrame","indicatorContainerStyle","isWidthDynamic","tabBarWidthPercent","translateX","styles","scrollEnabled","transform","position","jumpTo","getTabWidth","scroll","nativeEvent","contentOffset","el","event","defaultPrevented","preventDefault","onTabPress","onTabLongPress","container","flex","overflow","default","web","undefined","tabBar","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","shadowOffset","zIndex","tabContent","flexDirection","flexWrap","indicatorContainer","top","left","right","bottom"],"mappings":"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,EAIAC,SAAS,CAATA,SAAAA,GALF,SAAA,CAME,CACA,GACE,KAAA,oBAAA,CAA0B,KAAA,KAAA,CAA1B,QAAA,IAAA,MAAA,EACA,EACEN,MAAM,CAANA,KAAAA,EACAI,eAAe,CAAfA,MAAAA,CAAAA,KAAAA,CACGG,SAAAA,CAAD,QAAO,OAAOJ,CAAAA,SAAS,CAACI,CAAC,CAAlB,GAAgB,CAAhB,GALb,QAKM,EADFH,CAFF,CAFF,CAQE,CAEA,OACD,CAED,KAAA,WAAA,CAAiBA,eAAe,CAAhC,KAAA,EACD,CAhDH,C,uCAqOS,iCA0BH,KAzBJ,KADO,CACD,QADC,aACD,QADC,CACD,eADC,aACD,eADC,CACD,MADC,aACD,MADC,CACD,aADC,aACD,aADC,CACD,OADC,aACD,OADC,CACD,qBADC,aACD,qBADC,CACD,aADC,aACD,aADC,CACD,YADC,aACD,YADC,CACD,SADC,aACD,SADC,CACD,WADC,aACD,WADC,CACD,UADC,aACD,UADC,CACD,WADC,aACD,WADC,CACD,WADC,aACD,WADC,CACD,aADC,aACD,aADC,CACD,UADC,aACD,UADC,CACD,YADC,aACD,YADC,CACD,UADC,aACD,UADC,CACD,cADC,aACD,cADC,CACD,QADC,aACD,QADC,CACD,UADC,aACD,UADC,CACD,cADC,aACD,cADC,CACD,qBADC,aACD,qBADC,CACD,KADC,aACD,KADC,CAyBL+B,uBAzBK,aAyBLA,uBAzBK,kBA2BuB,KAA9B,KA3BO,CA2BD,MA3BC,cA2BD,MA3BC,CA2BShC,SA3BT,cA2BSA,SA3BT,IA4BCU,CAAAA,MA5BD,CA4BP,eA5BO,CA4BCA,MA5BD,CA8BP,GAAMuB,CAAAA,cAAc,CAAG,KAAA,oBAAA,CAAA,QAAA,IAAvB,MAAA,CACA,GAAMlB,CAAAA,WAAW,CAAG,KAAA,cAAA,CAAoB,KAApB,KAAA,CAAgC,KAApD,KAAoB,CAApB,CACA,GAAMmB,CAAAA,kBAAkB,CAAA,GAAA,MAAA,CAAMxB,MAAM,CAANA,MAAAA,CAAN,EAAA,CAAxB,GAAwB,CAAxB,CACA,GAAMyB,CAA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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport TabBarItem from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport memoize from './memoize';\nimport {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  Event,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n  tabWidths: { [key: string]: number };\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state: State = {\n    layout: { width: 0, height: 0 },\n    tabWidths: {},\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    const { navigationState } = this.props;\n    const { layout, tabWidths } = this.state;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        navigationState.routes.length ||\n      prevProps.navigationState.index !== navigationState.index ||\n      prevState.layout.width !== layout.width ||\n      prevState.tabWidths !== tabWidths\n    ) {\n      if (\n        this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' &&\n        !(\n          layout.width &&\n          navigationState.routes.every(\n            (r) => typeof tabWidths[r.key] === 'number'\n          )\n        )\n      ) {\n        // When tab width is dynamic, only adjust the scroll once we have all tab widths and layout\n        return;\n      }\n\n      this.resetScroll(navigationState.index);\n    }\n  }\n\n  // to store the layout.width of each tab\n  // when all onLayout's are fired, this would be set in state\n  private measuredTabWidths: { [key: string]: number } = {};\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollView: ScrollView | undefined;\n\n  private getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n    const tabStyle = StyleSheet.flatten(style);\n\n    return tabStyle ? tabStyle.width : undefined;\n  };\n\n  private getComputedTabWidth = (\n    index: number,\n    layout: Layout,\n    routes: Route[],\n    scrollEnabled: boolean | undefined,\n    tabWidths: { [key: string]: number },\n    flattenedWidth: string | number | undefined\n  ) => {\n    if (flattenedWidth === 'auto') {\n      return tabWidths[routes[index].key] || 0;\n    }\n\n    switch (typeof flattenedWidth) {\n      case 'number':\n        return flattenedWidth;\n      case 'string':\n        if (flattenedWidth.endsWith('%')) {\n          const width = parseFloat(flattenedWidth);\n          if (Number.isFinite(width)) {\n            return layout.width * (width / 100);\n          }\n        }\n    }\n\n    if (scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / routes.length;\n  };\n\n  private getMemoizedTabWidthGettter = memoize(\n    (\n      layout: Layout,\n      routes: Route[],\n      scrollEnabled: boolean | undefined,\n      tabWidths: { [key: string]: number },\n      flattenedWidth: string | number | undefined\n    ) => (i: number) =>\n      this.getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedWidth\n      )\n  );\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private getTabBarWidth = (props: Props<T>, state: State) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    return routes.reduce<number>(\n      (acc, _, i) =>\n        acc +\n        this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        ),\n      0\n    );\n  };\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const tabBarWidth = this.getTabBarWidth(props, state);\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, index: number) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    const centerDistance = Array.from({ length: index + 1 }).reduce<number>(\n      (total, _, i) => {\n        const tabWidth = this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        );\n\n        // To get the current index centered we adjust scroll amount by width of indexes\n        // 0 through (i - 1) and add half the width of current index i\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      },\n      0\n    );\n\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (index: number) => {\n    if (this.props.scrollEnabled) {\n      this.scrollView &&\n        this.scrollView.scrollTo({\n          x: this.getScrollAmount(this.props, this.state, index),\n          animated: true,\n        });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    // If we don't delay this state update, the UI gets stuck in weird state\n    // Maybe an issue in Reanimated?\n    // https://github.com/react-native-community/react-native-tab-view/issues/877\n    requestAnimationFrame(() =>\n      requestAnimationFrame(() =>\n        this.setState({\n          layout: {\n            height,\n            width,\n          },\n        })\n      )\n    );\n  };\n\n  private getTranslateX = memoize(\n    (scrollAmount: Animated.Node<number>, maxScrollDistance: number) =>\n      Animated.multiply(\n        Platform.OS === 'android' && I18nManager.isRTL\n          ? Animated.sub(maxScrollDistance, scrollAmount)\n          : scrollAmount,\n        I18nManager.isRTL ? 1 : -1\n      )\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n      indicatorContainerStyle,\n    } = this.props;\n    const { layout, tabWidths } = this.state;\n    const { routes } = navigationState;\n\n    const isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n    const tabBarWidth = this.getTabBarWidth(this.props, this.state);\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n            indicatorContainerStyle,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: isWidthDynamic ? 'auto' : `${100 / routes.length}%`,\n            style: indicatorStyle,\n            getTabWidth: this.getMemoizedTabWidthGettter(\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              this.getFlattenedTabWidth(tabStyle)\n            ),\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            accessibilityRole=\"tablist\"\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { x: this.scrollAmount },\n                },\n              },\n            ])}\n            ref={(el) => {\n              // @ts-ignore\n              this.scrollView = el?.getNode();\n            }}\n          >\n            {routes.map((route: T) => (\n              <TabBarItem\n                onLayout={\n                  isWidthDynamic\n                    ? (e) => {\n                        this.measuredTabWidths[route.key] =\n                          e.nativeEvent.layout.width;\n\n                        // When we have measured widths for all of the tabs, we should updates the state\n                        // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                        if (\n                          routes.every(\n                            (r) =>\n                              typeof this.measuredTabWidths[r.key] === 'number'\n                          )\n                        ) {\n                          this.setState({\n                            tabWidths: { ...this.measuredTabWidths },\n                          });\n                        }\n                      }\n                    : undefined\n                }\n                key={route.key}\n                position={position}\n                route={route}\n                navigationState={navigationState}\n                getAccessibilityLabel={getAccessibilityLabel}\n                getAccessible={getAccessible}\n                getLabelText={getLabelText}\n                getTestID={getTestID}\n                renderBadge={renderBadge}\n                renderIcon={renderIcon}\n                renderLabel={renderLabel}\n                activeColor={activeColor}\n                inactiveColor={inactiveColor}\n                pressColor={pressColor}\n                pressOpacity={pressOpacity}\n                onPress={() => {\n                  const event: Scene<T> & Event = {\n                    route,\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                      event.defaultPrevented = true;\n                    },\n                  };\n\n                  onTabPress?.(event);\n\n                  if (event.defaultPrevented) {\n                    return;\n                  }\n\n                  this.props.jumpTo(route.key);\n                }}\n                onLongPress={() => onTabLongPress?.({ route })}\n                labelStyle={labelStyle}\n                style={tabStyle}\n              />\n            ))}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}