{"ast":null,"code":"import Animated from\"react-native-reanimated\";var Value=Animated.Value,cond=Animated.cond,eq=Animated.eq,or=Animated.or;export var get=function get(array,index){var notFound=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Value();return array.reduce(function(acc,v,i){return cond(eq(i,index),v,acc);},notFound);};export var contains=function contains(values,value){return values.reduce(function(acc,v){return or(acc,eq(value,v));},new Value(0));};export var find=function find(values,fn){var notFound=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Value();return values.reduce(function(acc,v){return cond(fn(v),v,acc);},notFound);};","map":{"version":3,"sources":["Array.ts"],"names":["Value","cond","eq","or","Animated","get","notFound","array","contains","values","find","fn"],"mappings":"AAAA,MAAA,CAAA,QAAA,KAAA,yBAAA,CAEQA,GAAAA,CAAAA,K,CAAwBI,Q,CAAxBJ,KAAAA,CAAOC,I,CAAiBG,Q,CAAjBH,IAAPD,CAAaE,E,CAAWE,Q,CAAXF,EAAbF,CAAiBG,E,CAAOC,Q,CAAPD,EAAjBH,CAER,MAAO,IAAMK,CAAAA,GAAG,CAAHA,QAAAA,CAAAA,GAAAA,CAAM,KAANA,CAAM,KAANA,CAAM,CAAA,GAGjBC,CAAAA,QAHiB,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAGiB,GAHjB,CAAA,KAGiB,EAHjB,CAAA,MAKjBC,CAAAA,KAAK,CAALA,MAAAA,CACE,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAeN,CAAAA,IAAI,CAACC,EAAE,CAAA,CAAA,CAAH,KAAG,CAAH,CAAA,CAAA,CAAnB,GAAmB,CAAnB,CADFK,CAAAA,CALiB,QAKjBA,CALiB,CAAZ,CAAA,CAUP,MAAO,IAAMC,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,CAAW,MAAXA,CAAW,KAAXA,CAAW,CAAA,MAItBC,CAAAA,MAAM,CAANA,MAAAA,CACE,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAYN,CAAAA,EAAE,CAAA,GAAA,CAAMD,EAAE,CAAA,KAAA,CAAtB,CAAsB,CAAR,CAAd,CADFO,CAAAA,CAEE,GAAA,CAAA,KAAA,CANoB,CAMpB,CAFFA,CAJsB,CAAjB,CAAA,CASP,MAAO,IAAMC,CAAAA,IAAI,CAAJA,QAAAA,CAAAA,IAAAA,CAAO,MAAPA,CAAO,EAAPA,CAAO,CAAA,GAGlBJ,CAAAA,QAHkB,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAGgB,GAHhB,CAAA,KAGgB,EAHhB,CAAA,MAIfG,CAAAA,MAAM,CAANA,MAAAA,CAAc,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAYR,CAAAA,IAAI,CAACU,EAAE,CAAH,CAAG,CAAH,CAAA,CAAA,CAAhB,GAAgB,CAAhB,CAAdF,CAAAA,CAJe,QAIfA,CAJe,CAAb,CAAA","sourcesContent":["import Animated from \"react-native-reanimated\";\n\nconst { Value, cond, eq, or } = Animated;\n\nexport const get = (\n  array: Animated.Adaptable<number>[],\n  index: Animated.Adaptable<number>,\n  notFound: Animated.Node<number> = new Value()\n): Animated.Node<number> =>\n  array.reduce(\n    (acc, v, i) => cond(eq(i, index), v, acc),\n    notFound\n  ) as Animated.Node<number>;\n\nexport const contains = (\n  values: Animated.Adaptable<number>[],\n  value: Animated.Adaptable<number>\n): Animated.Node<0 | 1> =>\n  values.reduce(\n    (acc, v) => or(acc, eq(value, v)),\n    new Value(0)\n  ) as Animated.Node<0 | 1>;\n\nexport const find = (\n  values: Animated.Node<number>[],\n  fn: (v: Animated.Node<number>) => Animated.Node<number>,\n  notFound: Animated.Node<number> = new Value()\n) => values.reduce((acc, v) => cond(fn(v), v, acc), notFound);\n"]},"metadata":{},"sourceType":"module"}