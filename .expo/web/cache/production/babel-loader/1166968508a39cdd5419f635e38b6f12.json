{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{requireNativeComponent}from\"react-native-web/dist/index\";var RNCMaskedView=requireNativeComponent('RNCMaskedView');var MaskedViewIOS=function(_React$Component){_inherits(MaskedViewIOS,_React$Component);var _super=_createSuper(MaskedViewIOS);function MaskedViewIOS(){var _this;_classCallCheck(this,MaskedViewIOS);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._hasWarnedInvalidRenderMask=false;return _this;}_createClass(MaskedViewIOS,[{key:\"render\",value:function render(){var _this$props=this.props,maskElement=_this$props.maskElement,children=_this$props.children,otherViewProps=_objectWithoutProperties(_this$props,[\"maskElement\",\"children\"]);if(!React.isValidElement(maskElement)){if(!this._hasWarnedInvalidRenderMask){console.warn('MaskedView: Invalid `maskElement` prop was passed to MaskedView. '+'Expected a React Element. No mask will render.');this._hasWarnedInvalidRenderMask=true;}return React.createElement(View,otherViewProps,children);}return React.createElement(RNCMaskedView,otherViewProps,React.createElement(View,{pointerEvents:\"none\",style:StyleSheet.absoluteFill},maskElement),children);}}]);return MaskedViewIOS;}(React.Component);module.exports=MaskedViewIOS;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/@react-native-community/masked-view/js/MaskedView.js"],"names":["React","requireNativeComponent","RNCMaskedView","MaskedViewIOS","_hasWarnedInvalidRenderMask","props","maskElement","children","otherViewProps","isValidElement","console","warn","StyleSheet","absoluteFill","Component","module","exports"],"mappings":"wgCAUA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,6HAC2BC,sB,mCAE3B,GAAMC,CAAAA,aAAa,CAAGD,sBAAsB,CAAC,eAAD,CAA5C,C,GAyCME,CAAAA,a,sVACJC,2B,CAA8B,K,gFAErB,iBAC8C,KAAKC,KADnD,CACCC,WADD,aACCA,WADD,CACcC,QADd,aACcA,QADd,CAC2BC,cAD3B,kEAGP,GAAI,CAACR,KAAK,CAACS,cAAN,CAAqBH,WAArB,CAAL,CAAwC,CACtC,GAAI,CAAC,KAAKF,2BAAV,CAAuC,CAErCM,OAAO,CAACC,IAAR,CACE,oEACE,gDAFJ,EAIA,KAAKP,2BAAL,CAAmC,IAAnC,CACD,CAED,MAAO,qBAAC,IAAD,CAAUI,cAAV,CAA2BD,QAA3B,CAAP,CACD,CAED,MAEE,qBAAC,aAAD,CAAmBC,cAAnB,CACE,oBAAC,IAAD,EAAM,aAAa,CAAC,MAApB,CAA2B,KAAK,CAAEI,UAAU,CAACC,YAA7C,EACGP,WADH,CADF,CAIGC,QAJH,CAFF,CASD,C,2BA5ByBP,KAAK,CAACc,S,EA+BlCC,MAAM,CAACC,OAAP,CAAiBb,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport React from 'react';\nimport { View, StyleSheet, requireNativeComponent } from 'react-native';\n\nconst RNCMaskedView = requireNativeComponent('RNCMaskedView');\n\nimport { type MaskedViewProps } from './MaskedViewTypes';\n\n/**\n * Renders the child view with a mask specified in the `maskElement` prop.\n *\n * ```\n * import React from 'react';\n * import { Text, View } from 'react-native';\n * import MaskedView from 'react-native-masked-view';\n *\n * class MyMaskedView extends React.Component {\n *   render() {\n *     return (\n *       <MaskedView\n *         style={{ flex: 1 }}\n *         maskElement={\n *           <View style={styles.maskContainerStyle}>\n *             <Text style={styles.maskTextStyle}>\n *               Basic Mask\n *             </Text>\n *           </View>\n *         }\n *       >\n *         <View style={{ flex: 1, backgroundColor: 'blue' }} />\n *       </MaskedView>\n *     );\n *   }\n * }\n * ```\n *\n * The above example will render a view with a blue background that fills its\n * parent, and then mask that view with text that says \"Basic Mask\".\n *\n * The alpha channel of the view rendered by the `maskElement` prop determines how\n * much of the view's content and background shows through. Fully or partially\n * opaque pixels allow the underlying content to show through but fully\n * transparent pixels block that content.\n *\n */\nclass MaskedViewIOS extends React.Component<MaskedViewProps> {\n  _hasWarnedInvalidRenderMask = false;\n\n  render() {\n    const { maskElement, children, ...otherViewProps } = this.props;\n\n    if (!React.isValidElement(maskElement)) {\n      if (!this._hasWarnedInvalidRenderMask) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' +\n            'Expected a React Element. No mask will render.'\n        );\n        this._hasWarnedInvalidRenderMask = true;\n      }\n      // $FlowFixMe\n      return <View {...otherViewProps}>{children}</View>;\n    }\n\n    return (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <RNCMaskedView {...otherViewProps}>\n        <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n          {maskElement}\n        </View>\n        {children}\n      </RNCMaskedView>\n    );\n  }\n}\n\nmodule.exports = MaskedViewIOS;\n"]},"metadata":{},"sourceType":"module"}