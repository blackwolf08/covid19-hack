{"ast":null,"code":"'use strict';function matchesRange(cardNumber,min,max){var maxLengthToCheck=String(min).length;var substr=cardNumber.substr(0,maxLengthToCheck);var integerRepresentationOfCardNumber=parseInt(substr,10);min=parseInt(String(min).substr(0,substr.length),10);max=parseInt(String(max).substr(0,substr.length),10);return integerRepresentationOfCardNumber>=min&&integerRepresentationOfCardNumber<=max;}function matchesPattern(cardNumber,pattern){pattern=String(pattern);return pattern.substring(0,cardNumber.length)===cardNumber.substring(0,pattern.length);}function matches(cardNumber,pattern){if(Array.isArray(pattern)){return matchesRange(cardNumber,pattern[0],pattern[1]);}return matchesPattern(cardNumber,pattern);}module.exports=matches;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/node_modules/credit-card-type/lib/matches.js"],"names":["matchesRange","cardNumber","min","max","maxLengthToCheck","String","length","substr","integerRepresentationOfCardNumber","parseInt","matchesPattern","pattern","substring","matches","Array","isArray","module","exports"],"mappings":"AAAA,aAGA,QAASA,CAAAA,YAAT,CAAsBC,UAAtB,CAAkCC,GAAlC,CAAuCC,GAAvC,CAA4C,CAC1C,GAAIC,CAAAA,gBAAgB,CAAGC,MAAM,CAACH,GAAD,CAAN,CAAYI,MAAnC,CACA,GAAIC,CAAAA,MAAM,CAAGN,UAAU,CAACM,MAAX,CAAkB,CAAlB,CAAqBH,gBAArB,CAAb,CACA,GAAII,CAAAA,iCAAiC,CAAGC,QAAQ,CAACF,MAAD,CAAS,EAAT,CAAhD,CAEAL,GAAG,CAAGO,QAAQ,CAACJ,MAAM,CAACH,GAAD,CAAN,CAAYK,MAAZ,CAAmB,CAAnB,CAAsBA,MAAM,CAACD,MAA7B,CAAD,CAAuC,EAAvC,CAAd,CACAH,GAAG,CAAGM,QAAQ,CAACJ,MAAM,CAACF,GAAD,CAAN,CAAYI,MAAZ,CAAmB,CAAnB,CAAsBA,MAAM,CAACD,MAA7B,CAAD,CAAuC,EAAvC,CAAd,CAEA,MAAOE,CAAAA,iCAAiC,EAAIN,GAArC,EAA4CM,iCAAiC,EAAIL,GAAxF,CACD,CAED,QAASO,CAAAA,cAAT,CAAwBT,UAAxB,CAAoCU,OAApC,CAA6C,CAC3CA,OAAO,CAAGN,MAAM,CAACM,OAAD,CAAhB,CAEA,MAAOA,CAAAA,OAAO,CAACC,SAAR,CAAkB,CAAlB,CAAqBX,UAAU,CAACK,MAAhC,IAA4CL,UAAU,CAACW,SAAX,CAAqB,CAArB,CAAwBD,OAAO,CAACL,MAAhC,CAAnD,CACD,CAED,QAASO,CAAAA,OAAT,CAAiBZ,UAAjB,CAA6BU,OAA7B,CAAsC,CACpC,GAAIG,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAJ,CAA4B,CAC1B,MAAOX,CAAAA,YAAY,CAACC,UAAD,CAAaU,OAAO,CAAC,CAAD,CAApB,CAAyBA,OAAO,CAAC,CAAD,CAAhC,CAAnB,CACD,CAED,MAAOD,CAAAA,cAAc,CAACT,UAAD,CAAaU,OAAb,CAArB,CACD,CAEDK,MAAM,CAACC,OAAP,CAAiBJ,OAAjB","sourcesContent":["'use strict';\n\n// Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\nfunction matchesRange(cardNumber, min, max) {\n  var maxLengthToCheck = String(min).length;\n  var substr = cardNumber.substr(0, maxLengthToCheck);\n  var integerRepresentationOfCardNumber = parseInt(substr, 10);\n\n  min = parseInt(String(min).substr(0, substr.length), 10);\n  max = parseInt(String(max).substr(0, substr.length), 10);\n\n  return integerRepresentationOfCardNumber >= min && integerRepresentationOfCardNumber <= max;\n}\n\nfunction matchesPattern(cardNumber, pattern) {\n  pattern = String(pattern);\n\n  return pattern.substring(0, cardNumber.length) === cardNumber.substring(0, pattern.length);\n}\n\nfunction matches(cardNumber, pattern) {\n  if (Array.isArray(pattern)) {\n    return matchesRange(cardNumber, pattern[0], pattern[1]);\n  }\n\n  return matchesPattern(cardNumber, pattern);\n}\n\nmodule.exports = matches;\n"]},"metadata":{},"sourceType":"script"}