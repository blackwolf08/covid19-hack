{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import AnimatedNode from\"./AnimatedNode\";import{createOrReuseTransformNode}from\"./AnimatedTransform\";import deepEqual from'fbjs/lib/areEqual';function sanitizeStyle(inputStyle){var style={};for(var key in inputStyle){var value=inputStyle[key];if(value instanceof AnimatedNode){style[key]=value.__nodeID;}}return style;}export function createOrReuseStyleNode(style,oldNode){style=StyleSheet.flatten(style)||{};if(style.transform){style=_objectSpread({},style,{transform:createOrReuseTransformNode(style.transform,oldNode&&oldNode._style.transform)});}var config=sanitizeStyle(style);if(oldNode&&deepEqual(config,oldNode._config)){return oldNode;}return new AnimatedStyle(style,config);}var AnimatedStyle=function(_AnimatedNode){_inherits(AnimatedStyle,_AnimatedNode);var _super=_createSuper(AnimatedStyle);function AnimatedStyle(style,config){var _this;_classCallCheck(this,AnimatedStyle);_this=_super.call(this,{type:'style',style:config},Object.values(style));_this._config=config;_this._style=style;return _this;}_createClass(AnimatedStyle,[{key:\"_walkStyleAndGetAnimatedValues\",value:function _walkStyleAndGetAnimatedValues(style){var updatedStyle={};for(var key in style){var value=style[key];if(value instanceof AnimatedNode){updatedStyle[key]=value.__getValue();}else if(value&&!Array.isArray(value)&&typeof value==='object'){updatedStyle[key]=this._walkStyleAndGetAnimatedValues(value);}}return updatedStyle;}},{key:\"__onEvaluate\",value:function __onEvaluate(){return this._walkStyleAndGetAnimatedValues(this._style);}}]);return AnimatedStyle;}(AnimatedNode);export{AnimatedStyle as default};","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-reanimated/src/core/AnimatedStyle.js"],"names":["AnimatedNode","createOrReuseTransformNode","deepEqual","sanitizeStyle","inputStyle","style","key","value","__nodeID","createOrReuseStyleNode","oldNode","StyleSheet","flatten","transform","_style","config","_config","AnimatedStyle","type","Object","values","updatedStyle","__getValue","Array","isArray","_walkStyleAndGetAnimatedValues"],"mappings":"m1DAEA,MAAOA,CAAAA,YAAP,sBACA,OAASC,0BAAT,2BAEA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CAEA,QAASC,CAAAA,aAAT,CAAuBC,UAAvB,CAAmC,CACjC,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAMC,CAAAA,GAAX,GAAkBF,CAAAA,UAAlB,CAA8B,CAC5B,GAAMG,CAAAA,KAAK,CAAGH,UAAU,CAACE,GAAD,CAAxB,CACA,GAAIC,KAAK,WAAYP,CAAAA,YAArB,CAAmC,CACjCK,KAAK,CAACC,GAAD,CAAL,CAAaC,KAAK,CAACC,QAAnB,CACD,CACF,CACD,MAAOH,CAAAA,KAAP,CACD,CAED,MAAO,SAASI,CAAAA,sBAAT,CAAgCJ,KAAhC,CAAuCK,OAAvC,CAAgD,CACrDL,KAAK,CAAGM,UAAU,CAACC,OAAX,CAAmBP,KAAnB,GAA6B,EAArC,CACA,GAAIA,KAAK,CAACQ,SAAV,CAAqB,CACnBR,KAAK,kBACAA,KADA,EAEHQ,SAAS,CAAEZ,0BAA0B,CACnCI,KAAK,CAACQ,SAD6B,CAEnCH,OAAO,EAAIA,OAAO,CAACI,MAAR,CAAeD,SAFS,CAFlC,EAAL,CAOD,CACD,GAAME,CAAAA,MAAM,CAAGZ,aAAa,CAACE,KAAD,CAA5B,CACA,GAAIK,OAAO,EAAIR,SAAS,CAACa,MAAD,CAASL,OAAO,CAACM,OAAjB,CAAxB,CAAmD,CACjD,MAAON,CAAAA,OAAP,CACD,CACD,MAAO,IAAIO,CAAAA,aAAJ,CAAkBZ,KAAlB,CAAyBU,MAAzB,CAAP,CACD,C,GAMoBE,CAAAA,a,uGACnB,uBAAYZ,KAAZ,CAAmBU,MAAnB,CAA2B,+CACzB,uBAAM,CAAEG,IAAI,CAAE,OAAR,CAAiBb,KAAK,CAAEU,MAAxB,CAAN,CAAwCI,MAAM,CAACC,MAAP,CAAcf,KAAd,CAAxC,EACA,MAAKW,OAAL,CAAeD,MAAf,CACA,MAAKD,MAAL,CAAcT,KAAd,CAHyB,aAI1B,C,gHAE8BA,K,CAAO,CACpC,GAAMgB,CAAAA,YAAY,CAAG,EAArB,CACA,IAAK,GAAMf,CAAAA,GAAX,GAAkBD,CAAAA,KAAlB,CAAyB,CACvB,GAAME,CAAAA,KAAK,CAAGF,KAAK,CAACC,GAAD,CAAnB,CACA,GAAIC,KAAK,WAAYP,CAAAA,YAArB,CAAmC,CACjCqB,YAAY,CAACf,GAAD,CAAZ,CAAoBC,KAAK,CAACe,UAAN,EAApB,CACD,CAFD,IAEO,IAAIf,KAAK,EAAI,CAACgB,KAAK,CAACC,OAAN,CAAcjB,KAAd,CAAV,EAAkC,MAAOA,CAAAA,KAAP,GAAiB,QAAvD,CAAiE,CAEtEc,YAAY,CAACf,GAAD,CAAZ,CAAoB,KAAKmB,8BAAL,CAAoClB,KAApC,CAApB,CACD,CACF,CACD,MAAOc,CAAAA,YAAP,CACD,C,mDAEc,CACb,MAAO,MAAKI,8BAAL,CAAoC,KAAKX,MAAzC,CAAP,CACD,C,2BAvBwCd,Y,SAAtBiB,a","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport { createOrReuseTransformNode } from './AnimatedTransform';\n\nimport deepEqual from 'fbjs/lib/areEqual';\n\nfunction sanitizeStyle(inputStyle) {\n  const style = {};\n  for (const key in inputStyle) {\n    const value = inputStyle[key];\n    if (value instanceof AnimatedNode) {\n      style[key] = value.__nodeID;\n    }\n  }\n  return style;\n}\n\nexport function createOrReuseStyleNode(style, oldNode) {\n  style = StyleSheet.flatten(style) || {};\n  if (style.transform) {\n    style = {\n      ...style,\n      transform: createOrReuseTransformNode(\n        style.transform,\n        oldNode && oldNode._style.transform\n      ),\n    };\n  }\n  const config = sanitizeStyle(style);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedStyle(style, config);\n}\n\n/**\n * AnimatedStyle should never be directly instantiated, use createOrReuseStyleNode\n * in order to make a new instance of this node.\n */\nexport default class AnimatedStyle extends AnimatedNode {\n  constructor(style, config) {\n    super({ type: 'style', style: config }, Object.values(style));\n    this._config = config;\n    this._style = style;\n  }\n\n  _walkStyleAndGetAnimatedValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        updatedStyle[key] = value.__getValue();\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n      }\n    }\n    return updatedStyle;\n  }\n\n  __onEvaluate() {\n    return this._walkStyleAndGetAnimatedValues(this._style);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}