{"ast":null,"code":"'use strict';var parseDate=require(\"./parse-date\");var expirationMonth=require(\"./expiration-month\");var expirationYear=require(\"./expiration-year\");function verification(isValid,isPotentiallyValid,month,year){return{isValid:isValid,isPotentiallyValid:isPotentiallyValid,month:month,year:year};}function expirationDate(value,maxElapsedYear){var date,monthValid,yearValid,isValidForThisYear;if(typeof value==='string'){value=value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/,'$1/$2');date=parseDate(value);}else if(value!==null&&typeof value==='object'){date={month:String(value.month),year:String(value.year)};}else{return verification(false,false,null,null);}monthValid=expirationMonth(date.month);yearValid=expirationYear(date.year,maxElapsedYear);if(monthValid.isValid){if(yearValid.isCurrentYear){isValidForThisYear=monthValid.isValidForThisYear;return verification(isValidForThisYear,isValidForThisYear,date.month,date.year);}if(yearValid.isValid){return verification(true,true,date.month,date.year);}}if(monthValid.isPotentiallyValid&&yearValid.isPotentiallyValid){return verification(false,true,null,null);}return verification(false,false,null,null);}module.exports=expirationDate;","map":{"version":3,"sources":["/media/blackwolf08/Data/New Projects/Covid-19/COVID19/node_modules/react-native-input-credit-card/node_modules/card-validator/src/expiration-date.js"],"names":["parseDate","require","expirationMonth","expirationYear","verification","isValid","isPotentiallyValid","month","year","expirationDate","value","maxElapsedYear","date","monthValid","yearValid","isValidForThisYear","replace","String","isCurrentYear","module","exports"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,SAAS,CAAGC,OAAO,gBAAvB,CACA,GAAIC,CAAAA,eAAe,CAAGD,OAAO,sBAA7B,CACA,GAAIE,CAAAA,cAAc,CAAGF,OAAO,qBAA5B,CAEA,QAASG,CAAAA,YAAT,CAAsBC,OAAtB,CAA+BC,kBAA/B,CAAmDC,KAAnD,CAA0DC,IAA1D,CAAgE,CAC9D,MAAO,CACLH,OAAO,CAAEA,OADJ,CAELC,kBAAkB,CAAEA,kBAFf,CAGLC,KAAK,CAAEA,KAHF,CAILC,IAAI,CAAEA,IAJD,CAAP,CAMD,CAED,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,cAA/B,CAA+C,CAC7C,GAAIC,CAAAA,IAAJ,CAAUC,UAAV,CAAsBC,SAAtB,CAAiCC,kBAAjC,CAEA,GAAI,MAAOL,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7BA,KAAK,CAAGA,KAAK,CAACM,OAAN,CAAc,wBAAd,CAAwC,OAAxC,CAAR,CACAJ,IAAI,CAAGZ,SAAS,CAACU,KAAD,CAAhB,CACD,CAHD,IAGO,IAAIA,KAAK,GAAK,IAAV,EAAkB,MAAOA,CAAAA,KAAP,GAAiB,QAAvC,CAAiD,CACtDE,IAAI,CAAG,CACLL,KAAK,CAAEU,MAAM,CAACP,KAAK,CAACH,KAAP,CADR,CAELC,IAAI,CAAES,MAAM,CAACP,KAAK,CAACF,IAAP,CAFP,CAAP,CAID,CALM,IAKA,CACL,MAAOJ,CAAAA,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAe,IAAf,CAAqB,IAArB,CAAnB,CACD,CAEDS,UAAU,CAAGX,eAAe,CAACU,IAAI,CAACL,KAAN,CAA5B,CACAO,SAAS,CAAGX,cAAc,CAACS,IAAI,CAACJ,IAAN,CAAYG,cAAZ,CAA1B,CAEA,GAAIE,UAAU,CAACR,OAAf,CAAwB,CACtB,GAAIS,SAAS,CAACI,aAAd,CAA6B,CAC3BH,kBAAkB,CAAGF,UAAU,CAACE,kBAAhC,CAEA,MAAOX,CAAAA,YAAY,CAACW,kBAAD,CAAqBA,kBAArB,CAAyCH,IAAI,CAACL,KAA9C,CAAqDK,IAAI,CAACJ,IAA1D,CAAnB,CACD,CAED,GAAIM,SAAS,CAACT,OAAd,CAAuB,CACrB,MAAOD,CAAAA,YAAY,CAAC,IAAD,CAAO,IAAP,CAAaQ,IAAI,CAACL,KAAlB,CAAyBK,IAAI,CAACJ,IAA9B,CAAnB,CACD,CACF,CAED,GAAIK,UAAU,CAACP,kBAAX,EAAiCQ,SAAS,CAACR,kBAA/C,CAAmE,CACjE,MAAOF,CAAAA,YAAY,CAAC,KAAD,CAAQ,IAAR,CAAc,IAAd,CAAoB,IAApB,CAAnB,CACD,CAED,MAAOA,CAAAA,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAe,IAAf,CAAqB,IAArB,CAAnB,CACD,CAEDe,MAAM,CAACC,OAAP,CAAiBX,cAAjB","sourcesContent":["'use strict';\n\nvar parseDate = require('./parse-date');\nvar expirationMonth = require('./expiration-month');\nvar expirationYear = require('./expiration-year');\n\nfunction verification(isValid, isPotentiallyValid, month, year) {\n  return {\n    isValid: isValid,\n    isPotentiallyValid: isPotentiallyValid,\n    month: month,\n    year: year\n  };\n}\n\nfunction expirationDate(value, maxElapsedYear) {\n  var date, monthValid, yearValid, isValidForThisYear;\n\n  if (typeof value === 'string') {\n    value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\n    date = parseDate(value);\n  } else if (value !== null && typeof value === 'object') {\n    date = {\n      month: String(value.month),\n      year: String(value.year)\n    };\n  } else {\n    return verification(false, false, null, null);\n  }\n\n  monthValid = expirationMonth(date.month);\n  yearValid = expirationYear(date.year, maxElapsedYear);\n\n  if (monthValid.isValid) {\n    if (yearValid.isCurrentYear) {\n      isValidForThisYear = monthValid.isValidForThisYear;\n\n      return verification(isValidForThisYear, isValidForThisYear, date.month, date.year);\n    }\n\n    if (yearValid.isValid) {\n      return verification(true, true, date.month, date.year);\n    }\n  }\n\n  if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\n    return verification(false, true, null, null);\n  }\n\n  return verification(false, false, null, null);\n}\n\nmodule.exports = expirationDate;\n"]},"metadata":{},"sourceType":"script"}